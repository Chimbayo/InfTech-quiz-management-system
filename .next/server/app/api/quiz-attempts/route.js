"use strict";(()=>{var e={};e.id=4860,e.ids=[4860],e.modules={53524:e=>{e.exports=require("@prisma/client")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},19823:(e,t,s)=>{s.r(t),s.d(t,{originalPathname:()=>w,patchFetch:()=>z,requestAsyncStorage:()=>g,routeModule:()=>I,serverHooks:()=>h,staticGenerationAsyncStorage:()=>f});var r={};s.r(r),s.d(r,{POST:()=>q,dynamic:()=>m});var i=s(49303),o=s(88716),n=s(60670),a=s(87070),u=s(13538),d=s(95456),c=s(91585),l=s(26033),p=s(3950);let m="force-dynamic",y=c.Ry({quizId:c.Z_(),userId:c.Z_(),answers:c.IX(c.Ry({questionId:c.Z_(),selectedOptionIds:c.IX(c.Z_())})),timeSpent:c.Rx().optional()});async function q(e){try{let t=await (0,d.MH)("STUDENT"),s=await e.json(),r=y.parse(s);if(r.userId!==t.id)return a.NextResponse.json({error:"Unauthorized"},{status:403});let i=await u._.quiz.findUnique({where:{id:r.quizId,isActive:!0},include:{questions:{include:{options:!0}}}});if(!i)return a.NextResponse.json({error:"Quiz not found"},{status:404});if(await u._.quizAttempt.findFirst({where:{userId:r.userId,quizId:r.quizId,completedAt:{not:null}}}))return a.NextResponse.json({error:"Quiz already completed"},{status:400});let o=0,n=i.questions.length;for(let e of r.answers){let t=i.questions.find(t=>t.id===e.questionId);if(!t)continue;let s=t.options.filter(e=>e.isCorrect).map(e=>e.id).sort(),r=e.selectedOptionIds.sort();JSON.stringify(r)===JSON.stringify(s)&&o++}let c=Math.round(o/n*100),l=c>=i.passingScore,m=await u._.quizAttempt.create({data:{userId:r.userId,quizId:r.quizId,score:c,passed:l,timeSpent:r.timeSpent,completedAt:new Date,answers:{create:r.answers.map(e=>{let t=i.questions.find(t=>t.id===e.questionId),s=t?.options.filter(e=>e.isCorrect).map(e=>e.id).sort()||[],r=e.selectedOptionIds.sort(),o=JSON.stringify(r)===JSON.stringify(s);return{questionId:e.questionId,selectedOptionId:e.selectedOptionIds[0]||null,isCorrect:o}})}},include:{quiz:{select:{title:!0,passingScore:!0}},answers:{include:{question:{include:{options:!0}}}}}});try{let e=global.io;if(e){let t=(0,p.I)(e);for(let e of(await u._.userStudyGroup.findMany({where:{userId:r.userId,group:{quizId:r.quizId}},include:{group:{select:{id:!0,name:!0}},user:{select:{name:!0}}}}))){let s=l?`ðŸŽ‰ ${e.user.name} completed "${i.title}" with ${c}% (PASSED)`:`ðŸ“š ${e.user.name} completed "${i.title}" with ${c}% - Keep studying!`;await t.broadcastStudyProgress({studyGroupId:e.group.id,userId:r.userId,quizId:r.quizId,progressType:"QUIZ_COMPLETED",message:s,data:{score:c,passed:l,quizTitle:i.title}})}}}catch(e){console.warn("Failed to broadcast quiz completion:",e)}return a.NextResponse.json(m)}catch(e){if(console.error("Submit quiz error:",e),e instanceof l.jm)return a.NextResponse.json({error:"Invalid data",details:e.errors},{status:400});return a.NextResponse.json({error:"Internal server error"},{status:500})}}let I=new i.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/quiz-attempts/route",pathname:"/api/quiz-attempts",filename:"route",bundlePath:"app/api/quiz-attempts/route"},resolvedPagePath:"C:\\Users\\HP\\Documents\\InfTech-quiz-management-system\\src\\app\\api\\quiz-attempts\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:g,staticGenerationAsyncStorage:f,serverHooks:h}=I,w="/api/quiz-attempts/route";function z(){return(0,n.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:f})}},95456:(e,t,s)=>{s.d(t,{Gg:()=>i,MH:()=>n});var r=s(71615);async function i(){try{let e=(0,r.cookies)().get("user-session");if(!e||!e.value||""===e.value.trim())return null;let t=JSON.parse(e.value);if(!t||!t.id||!t.email||!t.name||!t.role)return console.warn("Invalid session structure:",t),null;return t}catch(e){return console.error("Error getting session:",e),null}}async function o(){let e=await i();if(!e)throw Error("Authentication required");return e}async function n(e){let t=await o();if(t.role!==e)throw Error(`Access denied. Required role: ${e}`);return t}},13538:(e,t,s)=>{s.d(t,{_:()=>i});var r=s(53524);let i=globalThis.prisma??new r.PrismaClient},3950:(e,t,s)=>{s.d(t,{I:()=>n});var r=s(13538);class i{constructor(e){this.io=e}async broadcastQuizStatus(e){try{let t=await r._.quizBroadcast.create({data:{quizId:e.quizId,type:e.type,message:e.message,sentBy:e.sentBy},include:{quiz:{select:{title:!0,chatRooms:{select:{id:!0}},studyGroups:{select:{id:!0,chatRooms:{select:{id:!0}}}}}},sender:{select:{name:!0,role:!0}}}});for(let s of[...t.quiz.chatRooms.map(e=>e.id),...t.quiz.studyGroups.flatMap(e=>e.chatRooms.map(e=>e.id))])this.io.to(s).emit("quiz-status-update",{id:t.id,quizId:e.quizId,quizTitle:t.quiz.title,type:e.type,message:e.message,sender:t.sender,timestamp:t.timestamp});return this.io.emit("quiz-announcement",{id:t.id,quizId:e.quizId,quizTitle:t.quiz.title,type:e.type,message:e.message,sender:t.sender,timestamp:t.timestamp}),t}catch(e){throw console.error("Error broadcasting quiz status:",e),e}}async broadcastStudyProgress(e){try{let t=await r._.studyGroup.findUnique({where:{id:e.studyGroupId},include:{chatRooms:{select:{id:!0}},members:{include:{user:{select:{id:!0,name:!0}}}}}});if(!t)throw Error("Study group not found");let s=await r._.user.findUnique({where:{id:e.userId},select:{name:!0,role:!0}});for(let r of t.chatRooms)this.io.to(r.id).emit("study-progress-update",{studyGroupId:e.studyGroupId,studyGroupName:t.name,userId:e.userId,userName:s?.name,progressType:e.progressType,message:e.message,data:e.data,timestamp:new Date().toISOString()});for(let i of t.chatRooms)await r._.chatMessage.create({data:{roomId:i.id,userId:e.userId,content:e.message,isSystemMessage:!0}}),this.io.to(i.id).emit("new-message",{id:Date.now().toString(),content:e.message,user:{id:e.userId,name:s?.name||"System",role:s?.role||"SYSTEM"},createdAt:new Date().toISOString(),isSystemMessage:!0})}catch(e){throw console.error("Error broadcasting study progress:",e),e}}async broadcastInstructorPresence(e,t,s){try{let i=await r._.user.findUnique({where:{id:e},select:{name:!0,role:!0}});if(!i||"TEACHER"!==i.role&&"ADMIN"!==i.role)return;let o={userId:e,userName:i.name,userRole:i.role,isOnline:t,timestamp:new Date().toISOString()};s?this.io.to(s).emit("instructor-presence-update",{...o,roomId:s}):this.io.emit("instructor-presence-update",o)}catch(e){console.error("Error broadcasting instructor presence:",e)}}async broadcastStudySessionUpdate(e,t){try{let s=await r._.studySession.findUnique({where:{id:e},include:{creator:{select:{name:!0}},studyGroup:{select:{name:!0}},quiz:{select:{title:!0}}}});if(!s)throw Error("Study session not found");let i={sessionId:e,sessionName:s.name,studyGroupName:s.studyGroup?.name,quizTitle:s.quiz?.title,type:t.type,message:t.message,data:t.data,timestamp:new Date().toISOString()};if(this.io.to(`study-session-${e}`).emit("study-session-update",i),s.studyGroupId){let e=await r._.studyGroup.findUnique({where:{id:s.studyGroupId},include:{chatRooms:{select:{id:!0}}}});if(e)for(let t of e.chatRooms)this.io.to(t.id).emit("study-session-update",i)}}catch(e){console.error("Error broadcasting study session update:",e)}}}let o=null,n=e=>{if(!o&&e&&(o=new i(e)),!o)throw Error("Broadcast instance not initialized");return o}}};var t=require("../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),r=t.X(0,[9276,1615,5972,1585],()=>s(19823));module.exports=r})();