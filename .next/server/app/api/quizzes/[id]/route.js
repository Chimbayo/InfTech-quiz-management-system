"use strict";(()=>{var e={};e.id=2118,e.ids=[2118],e.modules={53524:e=>{e.exports=require("@prisma/client")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},61323:(e,t,s)=>{s.r(t),s.d(t,{originalPathname:()=>I,patchFetch:()=>x,requestAsyncStorage:()=>f,routeModule:()=>g,serverHooks:()=>z,staticGenerationAsyncStorage:()=>w});var r={};s.r(r),s.d(r,{DELETE:()=>h,GET:()=>y,PUT:()=>q,dynamic:()=>m});var i=s(49303),o=s(88716),a=s(60670),n=s(87070),u=s(13538),d=s(95456),c=s(91585),l=s(26033),p=s(3950);let m="force-dynamic";async function y(e,{params:t}){try{await (0,d.MH)("ADMIN");let e=await u._.quiz.findUnique({where:{id:t.id},include:{questions:{include:{options:!0},orderBy:{order:"asc"}},_count:{select:{attempts:!0}}}});if(!e)return n.NextResponse.json({error:"Quiz not found"},{status:404});return n.NextResponse.json(e)}catch(e){return console.error("Get quiz error:",e),n.NextResponse.json({error:"Internal server error"},{status:500})}}async function q(e,{params:t}){try{let s=await (0,d.MH)("ADMIN"),r=await e.json(),i=c.Ry({title:c.Z_().min(1).optional(),description:c.Z_().optional(),passingScore:c.Rx().min(0).max(100).optional(),timeLimit:c.Rx().min(1).optional(),isActive:c.O7().optional(),startAt:c.Z_().datetime().optional(),questions:c.IX(c.Ry({id:c.Z_().optional(),text:c.Z_().min(1),type:c.Km(["MULTIPLE_CHOICE","TRUE_FALSE"]),options:c.IX(c.Ry({id:c.Z_().optional(),text:c.Z_().min(1),isCorrect:c.O7()})).min(2)}).refine(e=>{let t=e.options.filter(e=>e.isCorrect).length;return 1===t},{message:"Exactly one option must be marked as correct"})).optional()}).parse(r),o=await u._.quiz.findUnique({where:{id:t.id}});if(!o)return n.NextResponse.json({error:"Quiz not found"},{status:404});let a={title:i.title,description:i.description,passingScore:i.passingScore,timeLimit:i.timeLimit,isActive:i.isActive,startAt:i.startAt?new Date(i.startAt):void 0};i.questions&&(await u._.question.deleteMany({where:{quizId:t.id}}),a.questions={create:i.questions.map((e,t)=>({text:e.text,type:e.type,order:t+1,options:{create:e.options.map((e,t)=>({text:e.text,isCorrect:e.isCorrect,order:t+1}))}}))});let l=await u._.quiz.update({where:{id:t.id},data:a,include:{questions:{include:{options:!0},orderBy:{order:"asc"}}}});try{let e=global.io;if(e){let t=(0,p.I)(e);if(void 0!==i.isActive&&i.isActive!==o.isActive){let e=i.isActive?"PUBLISHED":"CLOSED",r=i.isActive?`Quiz "${l.title}" has been published and is now available!`:`Quiz "${l.title}" has been closed and is no longer available.`;await t.broadcastQuizStatus({quizId:l.id,type:e,message:r,sentBy:s.id})}}}catch(e){console.warn("Failed to broadcast quiz status change:",e)}return n.NextResponse.json(l)}catch(e){if(console.error("Update quiz error:",e),e instanceof l.jm)return n.NextResponse.json({error:"Invalid data",details:e.errors},{status:400});return n.NextResponse.json({error:"Internal server error"},{status:500})}}async function h(e,{params:t}){try{if(await (0,d.MH)("ADMIN"),!await u._.quiz.findUnique({where:{id:t.id}}))return n.NextResponse.json({error:"Quiz not found"},{status:404});return await u._.quiz.delete({where:{id:t.id}}),n.NextResponse.json({message:"Quiz deleted successfully"})}catch(e){return console.error("Delete quiz error:",e),n.NextResponse.json({error:"Internal server error"},{status:500})}}let g=new i.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/quizzes/[id]/route",pathname:"/api/quizzes/[id]",filename:"route",bundlePath:"app/api/quizzes/[id]/route"},resolvedPagePath:"C:\\Users\\HP\\Documents\\InfTech-quiz-management-system\\src\\app\\api\\quizzes\\[id]\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:f,staticGenerationAsyncStorage:w,serverHooks:z}=g,I="/api/quizzes/[id]/route";function x(){return(0,a.patchFetch)({serverHooks:z,staticGenerationAsyncStorage:w})}},95456:(e,t,s)=>{s.d(t,{Gg:()=>i,MH:()=>a});var r=s(71615);async function i(){try{let e=(0,r.cookies)().get("user-session");if(!e||!e.value||""===e.value.trim())return null;let t=JSON.parse(e.value);if(!t||!t.id||!t.email||!t.name||!t.role)return console.warn("Invalid session structure:",t),null;return t}catch(e){return console.error("Error getting session:",e),null}}async function o(){let e=await i();if(!e)throw Error("Authentication required");return e}async function a(e){let t=await o();if(t.role!==e)throw Error(`Access denied. Required role: ${e}`);return t}},13538:(e,t,s)=>{s.d(t,{_:()=>i});var r=s(53524);let i=globalThis.prisma??new r.PrismaClient},3950:(e,t,s)=>{s.d(t,{I:()=>a});var r=s(13538);class i{constructor(e){this.io=e}async broadcastQuizStatus(e){try{let t=await r._.quizBroadcast.create({data:{quizId:e.quizId,type:e.type,message:e.message,sentBy:e.sentBy},include:{quiz:{select:{title:!0,chatRooms:{select:{id:!0}},studyGroups:{select:{id:!0,chatRooms:{select:{id:!0}}}}}},sender:{select:{name:!0,role:!0}}}});for(let s of[...t.quiz.chatRooms.map(e=>e.id),...t.quiz.studyGroups.flatMap(e=>e.chatRooms.map(e=>e.id))])this.io.to(s).emit("quiz-status-update",{id:t.id,quizId:e.quizId,quizTitle:t.quiz.title,type:e.type,message:e.message,sender:t.sender,timestamp:t.timestamp});return this.io.emit("quiz-announcement",{id:t.id,quizId:e.quizId,quizTitle:t.quiz.title,type:e.type,message:e.message,sender:t.sender,timestamp:t.timestamp}),t}catch(e){throw console.error("Error broadcasting quiz status:",e),e}}async broadcastStudyProgress(e){try{let t=await r._.studyGroup.findUnique({where:{id:e.studyGroupId},include:{chatRooms:{select:{id:!0}},members:{include:{user:{select:{id:!0,name:!0}}}}}});if(!t)throw Error("Study group not found");let s=await r._.user.findUnique({where:{id:e.userId},select:{name:!0,role:!0}});for(let r of t.chatRooms)this.io.to(r.id).emit("study-progress-update",{studyGroupId:e.studyGroupId,studyGroupName:t.name,userId:e.userId,userName:s?.name,progressType:e.progressType,message:e.message,data:e.data,timestamp:new Date().toISOString()});for(let i of t.chatRooms)await r._.chatMessage.create({data:{roomId:i.id,userId:e.userId,content:e.message,isSystemMessage:!0}}),this.io.to(i.id).emit("new-message",{id:Date.now().toString(),content:e.message,user:{id:e.userId,name:s?.name||"System",role:s?.role||"SYSTEM"},createdAt:new Date().toISOString(),isSystemMessage:!0})}catch(e){throw console.error("Error broadcasting study progress:",e),e}}async broadcastInstructorPresence(e,t,s){try{let i=await r._.user.findUnique({where:{id:e},select:{name:!0,role:!0}});if(!i||"TEACHER"!==i.role&&"ADMIN"!==i.role)return;let o={userId:e,userName:i.name,userRole:i.role,isOnline:t,timestamp:new Date().toISOString()};s?this.io.to(s).emit("instructor-presence-update",{...o,roomId:s}):this.io.emit("instructor-presence-update",o)}catch(e){console.error("Error broadcasting instructor presence:",e)}}async broadcastStudySessionUpdate(e,t){try{let s=await r._.studySession.findUnique({where:{id:e},include:{creator:{select:{name:!0}},studyGroup:{select:{name:!0}},quiz:{select:{title:!0}}}});if(!s)throw Error("Study session not found");let i={sessionId:e,sessionName:s.name,studyGroupName:s.studyGroup?.name,quizTitle:s.quiz?.title,type:t.type,message:t.message,data:t.data,timestamp:new Date().toISOString()};if(this.io.to(`study-session-${e}`).emit("study-session-update",i),s.studyGroupId){let e=await r._.studyGroup.findUnique({where:{id:s.studyGroupId},include:{chatRooms:{select:{id:!0}}}});if(e)for(let t of e.chatRooms)this.io.to(t.id).emit("study-session-update",i)}}catch(e){console.error("Error broadcasting study session update:",e)}}}let o=null,a=e=>{if(!o&&e&&(o=new i(e)),!o)throw Error("Broadcast instance not initialized");return o}}};var t=require("../../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),r=t.X(0,[9276,1615,5972,1585],()=>s(61323));module.exports=r})();