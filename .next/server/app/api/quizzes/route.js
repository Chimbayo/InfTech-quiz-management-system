"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/quizzes/route";
exports.ids = ["app/api/quizzes/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fquizzes%2Froute&page=%2Fapi%2Fquizzes%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fquizzes%2Froute.ts&appDir=C%3A%5CUsers%5CHP%5CDocuments%5CInfTech-quiz-management-system%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CHP%5CDocuments%5CInfTech-quiz-management-system&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fquizzes%2Froute&page=%2Fapi%2Fquizzes%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fquizzes%2Froute.ts&appDir=C%3A%5CUsers%5CHP%5CDocuments%5CInfTech-quiz-management-system%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CHP%5CDocuments%5CInfTech-quiz-management-system&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_HP_Documents_InfTech_quiz_management_system_src_app_api_quizzes_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/quizzes/route.ts */ \"(rsc)/./src/app/api/quizzes/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/quizzes/route\",\n        pathname: \"/api/quizzes\",\n        filename: \"route\",\n        bundlePath: \"app/api/quizzes/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\HP\\\\Documents\\\\InfTech-quiz-management-system\\\\src\\\\app\\\\api\\\\quizzes\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_HP_Documents_InfTech_quiz_management_system_src_app_api_quizzes_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/quizzes/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZxdWl6emVzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZxdWl6emVzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGcXVpenplcyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNIUCU1Q0RvY3VtZW50cyU1Q0luZlRlY2gtcXVpei1tYW5hZ2VtZW50LXN5c3RlbSU1Q3NyYyU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDSFAlNUNEb2N1bWVudHMlNUNJbmZUZWNoLXF1aXotbWFuYWdlbWVudC1zeXN0ZW0maXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQzBDO0FBQ3ZIO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVpei1tYW5hZ2VtZW50LXN5c3RlbS8/NDMzOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxIUFxcXFxEb2N1bWVudHNcXFxcSW5mVGVjaC1xdWl6LW1hbmFnZW1lbnQtc3lzdGVtXFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXHF1aXp6ZXNcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3F1aXp6ZXMvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9xdWl6emVzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9xdWl6emVzL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVXNlcnNcXFxcSFBcXFxcRG9jdW1lbnRzXFxcXEluZlRlY2gtcXVpei1tYW5hZ2VtZW50LXN5c3RlbVxcXFxzcmNcXFxcYXBwXFxcXGFwaVxcXFxxdWl6emVzXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9xdWl6emVzL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fquizzes%2Froute&page=%2Fapi%2Fquizzes%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fquizzes%2Froute.ts&appDir=C%3A%5CUsers%5CHP%5CDocuments%5CInfTech-quiz-management-system%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CHP%5CDocuments%5CInfTech-quiz-management-system&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/quizzes/route.ts":
/*!**************************************!*\
  !*** ./src/app/api/quizzes/route.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   dynamic: () => (/* binding */ dynamic)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/prisma */ \"(rsc)/./src/lib/prisma.ts\");\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/auth */ \"(rsc)/./src/lib/auth.ts\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/v3/types.js\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/v3/ZodError.js\");\n/* harmony import */ var _lib_realtime_broadcast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/realtime-broadcast */ \"(rsc)/./src/lib/realtime-broadcast.ts\");\n\n\n\n\n\n// Force dynamic rendering\nconst dynamic = \"force-dynamic\";\nconst createQuizSchema = zod__WEBPACK_IMPORTED_MODULE_4__.object({\n    title: zod__WEBPACK_IMPORTED_MODULE_4__.string().min(1),\n    description: zod__WEBPACK_IMPORTED_MODULE_4__.string().optional(),\n    passingScore: zod__WEBPACK_IMPORTED_MODULE_4__.number().min(0).max(100),\n    timeLimit: zod__WEBPACK_IMPORTED_MODULE_4__.number().min(1).optional(),\n    isActive: zod__WEBPACK_IMPORTED_MODULE_4__.boolean().optional(),\n    startAt: zod__WEBPACK_IMPORTED_MODULE_4__.string().datetime().optional(),\n    creatorId: zod__WEBPACK_IMPORTED_MODULE_4__.string(),\n    enableChat: zod__WEBPACK_IMPORTED_MODULE_4__.boolean().optional(),\n    chatRoomName: zod__WEBPACK_IMPORTED_MODULE_4__.string().optional(),\n    allowChatDuringQuiz: zod__WEBPACK_IMPORTED_MODULE_4__.boolean().optional(),\n    enableStudyGroup: zod__WEBPACK_IMPORTED_MODULE_4__.boolean().optional(),\n    questions: zod__WEBPACK_IMPORTED_MODULE_4__.array(zod__WEBPACK_IMPORTED_MODULE_4__.object({\n        text: zod__WEBPACK_IMPORTED_MODULE_4__.string().min(1),\n        type: zod__WEBPACK_IMPORTED_MODULE_4__[\"enum\"]([\n            \"MULTIPLE_CHOICE\",\n            \"TRUE_FALSE\"\n        ]),\n        options: zod__WEBPACK_IMPORTED_MODULE_4__.array(zod__WEBPACK_IMPORTED_MODULE_4__.object({\n            text: zod__WEBPACK_IMPORTED_MODULE_4__.string().min(1),\n            isCorrect: zod__WEBPACK_IMPORTED_MODULE_4__.boolean()\n        })).min(2)\n    }).refine((question)=>{\n        // Ensure exactly one option is marked as correct\n        const correctCount = question.options.filter((option)=>option.isCorrect).length;\n        return correctCount === 1;\n    }, {\n        message: \"Exactly one option must be marked as correct\"\n    })).min(1)\n});\nasync function POST(request) {\n    try {\n        const session = await (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.requireRole)(\"ADMIN\");\n        const body = await request.json();\n        const data = createQuizSchema.parse(body);\n        // Verify the creator is the authenticated user\n        if (data.creatorId !== session.id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 403\n            });\n        }\n        const quiz = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.quiz.create({\n            data: {\n                title: data.title,\n                description: data.description,\n                passingScore: data.passingScore,\n                timeLimit: data.timeLimit,\n                isActive: data.isActive ?? false,\n                enableChat: data.enableChat ?? false,\n                startAt: data.startAt ? new Date(data.startAt) : null,\n                creatorId: data.creatorId,\n                questions: {\n                    create: data.questions.map((question, index)=>({\n                            text: question.text,\n                            type: question.type,\n                            order: index + 1,\n                            options: {\n                                create: question.options.map((option, optionIndex)=>({\n                                        text: option.text,\n                                        isCorrect: option.isCorrect,\n                                        order: optionIndex + 1\n                                    }))\n                            }\n                        }))\n                }\n            },\n            include: {\n                questions: {\n                    include: {\n                        options: true\n                    }\n                }\n            }\n        });\n        // Auto-create chat rooms for all quizzes created by admin\n        console.log(`Creating chat rooms for quiz: ${quiz.title}`);\n        try {\n            // Create Pre-Quiz Discussion Room\n            console.log(\"Creating pre-quiz discussion room...\");\n            const preQuizRoom = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.chatRoom.create({\n                data: {\n                    name: `${quiz.title} - Pre-Quiz Discussion`,\n                    description: \"Discuss quiz topics and prepare together before attempting\",\n                    type: \"PRE_QUIZ_DISCUSSION\",\n                    quizId: quiz.id,\n                    createdBy: data.creatorId,\n                    allowChatDuringQuiz: false,\n                    isActive: true\n                }\n            });\n            await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.chatMessage.create({\n                data: {\n                    roomId: preQuizRoom.id,\n                    userId: data.creatorId,\n                    content: `📚 Pre-Quiz Discussion for \"${quiz.title}\" is now open! Discuss topics, ask questions, and prepare together before attempting the quiz.`,\n                    isSystemMessage: true\n                }\n            });\n            console.log(\"Pre-quiz room created successfully\");\n            // Create Post-Quiz Review Room (initially inactive)\n            console.log(\"Creating post-quiz review room...\");\n            const postQuizRoom = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.chatRoom.create({\n                data: {\n                    name: `${quiz.title} - Post-Quiz Review`,\n                    description: \"Review answers and discuss explanations after completing the quiz\",\n                    type: \"POST_QUIZ_REVIEW\",\n                    quizId: quiz.id,\n                    createdBy: data.creatorId,\n                    allowChatDuringQuiz: false,\n                    isActive: false\n                }\n            });\n            await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.chatMessage.create({\n                data: {\n                    roomId: postQuizRoom.id,\n                    userId: data.creatorId,\n                    content: `🎯 Post-Quiz Review for \"${quiz.title}\" will be available after you complete the quiz. Discuss answers, explanations, and learn from each other!`,\n                    isSystemMessage: true\n                }\n            });\n            console.log(\"Post-quiz room created successfully\");\n            // Create General Quiz Discussion Room (always active)\n            console.log(\"Creating general discussion room...\");\n            const generalRoom = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.chatRoom.create({\n                data: {\n                    name: data.chatRoomName || `${quiz.title} - General Discussion`,\n                    description: \"General discussion about the quiz topic\",\n                    type: \"QUIZ_DISCUSSION\",\n                    quizId: quiz.id,\n                    createdBy: data.creatorId,\n                    allowChatDuringQuiz: data.allowChatDuringQuiz || false,\n                    isActive: true\n                }\n            });\n            await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.chatMessage.create({\n                data: {\n                    roomId: generalRoom.id,\n                    userId: data.creatorId,\n                    content: `💬 General discussion room for \"${quiz.title}\" is now available! Share insights, ask questions, and collaborate with your peers.`,\n                    isSystemMessage: true\n                }\n            });\n            console.log(\"General discussion room created successfully\");\n            // Create study group if enabled\n            if (data.enableStudyGroup) {\n                console.log(\"Creating study group...\");\n                const studyGroup = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.studyGroup.create({\n                    data: {\n                        name: `${quiz.title} - Study Group`,\n                        description: `Collaborative study group for ${quiz.title}. Join to study together and help each other succeed!`,\n                        quizId: quiz.id,\n                        createdBy: data.creatorId\n                    }\n                });\n                // Create study group chat room\n                const studyGroupRoom = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.chatRoom.create({\n                    data: {\n                        name: `${quiz.title} - Study Group Chat`,\n                        description: \"Private chat for study group members\",\n                        type: \"STUDY_GROUP\",\n                        studyGroupId: studyGroup.id,\n                        createdBy: data.creatorId,\n                        allowChatDuringQuiz: true,\n                        isActive: true\n                    }\n                });\n                await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.chatMessage.create({\n                    data: {\n                        roomId: studyGroupRoom.id,\n                        userId: data.creatorId,\n                        content: `👥 Welcome to the \"${quiz.title}\" study group! This is your private space to collaborate, share resources, and help each other prepare for the quiz. Good luck!`,\n                        isSystemMessage: true\n                    }\n                });\n                // Auto-add creator as moderator\n                await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.userStudyGroup.create({\n                    data: {\n                        userId: data.creatorId,\n                        groupId: studyGroup.id,\n                        role: \"moderator\"\n                    }\n                });\n                console.log(\"Study group created successfully\");\n            }\n            console.log(`✅ Auto-created chat rooms for quiz: ${quiz.title}`);\n        } catch (error) {\n            console.error(\"❌ Failed to create chat rooms for quiz:\", error);\n        // Don't fail quiz creation if chat room creation fails\n        }\n        // Broadcast quiz creation if active\n        if (quiz.isActive) {\n            try {\n                // Initialize WebSocket if not already done\n                const initResponse = await fetch(`${process.env.NEXTAUTH_URL || \"http://localhost:3001\"}/api/socketio`, {\n                    method: \"POST\"\n                });\n                const io = global.io;\n                if (io) {\n                    const broadcast = (0,_lib_realtime_broadcast__WEBPACK_IMPORTED_MODULE_3__.getBroadcastInstance)(io);\n                    await broadcast.broadcastQuizStatus({\n                        quizId: quiz.id,\n                        type: \"PUBLISHED\",\n                        message: `New quiz \"${quiz.title}\" has been published and is now available!`,\n                        sentBy: data.creatorId\n                    });\n                    // Also broadcast as a general notification to all students\n                    io.emit(\"new-quiz-notification\", {\n                        id: `quiz-${quiz.id}`,\n                        message: `📚 New quiz available: \"${quiz.title}\"`,\n                        quizId: quiz.id,\n                        quizTitle: quiz.title,\n                        createdAt: quiz.createdAt\n                    });\n                    console.log(\"Quiz creation notification sent:\", quiz.title);\n                } else {\n                    console.warn(\"WebSocket IO not available for broadcasting\");\n                }\n            } catch (error) {\n                console.warn(\"Failed to broadcast quiz creation:\", error);\n            }\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(quiz);\n    } catch (error) {\n        console.error(\"Create quiz error:\", error);\n        if (error instanceof zod__WEBPACK_IMPORTED_MODULE_5__.ZodError) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid data\",\n                details: error.errors\n            }, {\n                status: 400\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const role = searchParams.get(\"role\");\n        let quizzes;\n        if (role === \"student\") {\n            // Visible to students if active\n            quizzes = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.quiz.findMany({\n                where: {\n                    isActive: true\n                },\n                include: {\n                    creator: {\n                        select: {\n                            name: true\n                        }\n                    },\n                    chatRooms: {\n                        where: {\n                            isActive: true\n                        },\n                        select: {\n                            id: true,\n                            name: true,\n                            type: true\n                        }\n                    },\n                    _count: {\n                        select: {\n                            questions: true,\n                            attempts: true\n                        }\n                    }\n                },\n                orderBy: {\n                    createdAt: \"desc\"\n                }\n            });\n        } else {\n            // Get quizzes for admin (requires authentication)\n            const session = await (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.requireRole)(\"ADMIN\");\n            quizzes = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.quiz.findMany({\n                where: {\n                    creatorId: session.id\n                },\n                include: {\n                    _count: {\n                        select: {\n                            questions: true,\n                            attempts: true\n                        }\n                    }\n                },\n                orderBy: {\n                    createdAt: \"desc\"\n                }\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(quizzes);\n    } catch (error) {\n        console.error(\"Get quizzes error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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O29CQUNGO29CQUNBOEUsUUFBUTt3QkFDTkYsUUFBUTs0QkFDTi9FLFdBQVc7NEJBQ1hrRixVQUFVO3dCQUNaO29CQUNGO2dCQUNGO2dCQUNBQyxTQUFTO29CQUFFbEIsV0FBVztnQkFBTztZQUMvQjtRQUNGLE9BQU87WUFDTCxrREFBa0Q7WUFDbEQsTUFBTWpELFVBQVUsTUFBTXhDLHNEQUFXQSxDQUFDO1lBQ2xDbUcsVUFBVSxNQUFNcEcsK0NBQU1BLENBQUNpRCxJQUFJLENBQUNvRCxRQUFRLENBQUM7Z0JBQ25DQyxPQUFPO29CQUFFbEYsV0FBV3FCLFFBQVFLLEVBQUU7Z0JBQUM7Z0JBQy9CVSxTQUFTO29CQUNQa0QsUUFBUTt3QkFDTkYsUUFBUTs0QkFDTi9FLFdBQVc7NEJBQ1hrRixVQUFVO3dCQUNaO29CQUNGO2dCQUNGO2dCQUNBQyxTQUFTO29CQUFFbEIsV0FBVztnQkFBTztZQUMvQjtRQUNGO1FBRUEsT0FBTzNGLHFEQUFZQSxDQUFDNEMsSUFBSSxDQUFDeUQ7SUFDM0IsRUFBRSxPQUFPckQsT0FBTztRQUNkVSxRQUFRVixLQUFLLENBQUMsc0JBQXNCQTtRQUNwQyxPQUFPaEQscURBQVlBLENBQUM0QyxJQUFJLENBQ3RCO1lBQUVJLE9BQU87UUFBd0IsR0FDakM7WUFBRUMsUUFBUTtRQUFJO0lBRWxCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWl6LW1hbmFnZW1lbnQtc3lzdGVtLy4vc3JjL2FwcC9hcGkvcXVpenplcy9yb3V0ZS50cz81YmE0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcidcbmltcG9ydCB7IHByaXNtYSB9IGZyb20gJ0AvbGliL3ByaXNtYSdcbmltcG9ydCB7IHJlcXVpcmVSb2xlIH0gZnJvbSAnQC9saWIvYXV0aCdcbmltcG9ydCB7IHogfSBmcm9tICd6b2QnXG5pbXBvcnQgeyBVc2VyUm9sZSwgUXVlc3Rpb25UeXBlIH0gZnJvbSAnQC90eXBlcydcbmltcG9ydCB7IGdldEJyb2FkY2FzdEluc3RhbmNlIH0gZnJvbSAnQC9saWIvcmVhbHRpbWUtYnJvYWRjYXN0J1xuXG4vLyBGb3JjZSBkeW5hbWljIHJlbmRlcmluZ1xuZXhwb3J0IGNvbnN0IGR5bmFtaWMgPSAnZm9yY2UtZHluYW1pYydcblxuY29uc3QgY3JlYXRlUXVpelNjaGVtYSA9IHoub2JqZWN0KHtcbiAgdGl0bGU6IHouc3RyaW5nKCkubWluKDEpLFxuICBkZXNjcmlwdGlvbjogei5zdHJpbmcoKS5vcHRpb25hbCgpLFxuICBwYXNzaW5nU2NvcmU6IHoubnVtYmVyKCkubWluKDApLm1heCgxMDApLFxuICB0aW1lTGltaXQ6IHoubnVtYmVyKCkubWluKDEpLm9wdGlvbmFsKCksXG4gIGlzQWN0aXZlOiB6LmJvb2xlYW4oKS5vcHRpb25hbCgpLFxuICBzdGFydEF0OiB6LnN0cmluZygpLmRhdGV0aW1lKCkub3B0aW9uYWwoKSxcbiAgY3JlYXRvcklkOiB6LnN0cmluZygpLFxuICBlbmFibGVDaGF0OiB6LmJvb2xlYW4oKS5vcHRpb25hbCgpLFxuICBjaGF0Um9vbU5hbWU6IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgYWxsb3dDaGF0RHVyaW5nUXVpejogei5ib29sZWFuKCkub3B0aW9uYWwoKSxcbiAgZW5hYmxlU3R1ZHlHcm91cDogei5ib29sZWFuKCkub3B0aW9uYWwoKSxcbiAgcXVlc3Rpb25zOiB6LmFycmF5KHoub2JqZWN0KHtcbiAgICB0ZXh0OiB6LnN0cmluZygpLm1pbigxKSxcbiAgICB0eXBlOiB6LmVudW0oWydNVUxUSVBMRV9DSE9JQ0UnLCAnVFJVRV9GQUxTRSddKSxcbiAgICBvcHRpb25zOiB6LmFycmF5KHoub2JqZWN0KHtcbiAgICAgIHRleHQ6IHouc3RyaW5nKCkubWluKDEpLFxuICAgICAgaXNDb3JyZWN0OiB6LmJvb2xlYW4oKSxcbiAgICB9KSkubWluKDIpLFxuICB9KS5yZWZpbmUoKHF1ZXN0aW9uKSA9PiB7XG4gICAgLy8gRW5zdXJlIGV4YWN0bHkgb25lIG9wdGlvbiBpcyBtYXJrZWQgYXMgY29ycmVjdFxuICAgIGNvbnN0IGNvcnJlY3RDb3VudCA9IHF1ZXN0aW9uLm9wdGlvbnMuZmlsdGVyKG9wdGlvbiA9PiBvcHRpb24uaXNDb3JyZWN0KS5sZW5ndGg7XG4gICAgcmV0dXJuIGNvcnJlY3RDb3VudCA9PT0gMTtcbiAgfSwge1xuICAgIG1lc3NhZ2U6ICdFeGFjdGx5IG9uZSBvcHRpb24gbXVzdCBiZSBtYXJrZWQgYXMgY29ycmVjdCcsXG4gIH0pKS5taW4oMSksXG59KVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xuICB0cnkge1xuICAgIGNvbnN0IHNlc3Npb24gPSBhd2FpdCByZXF1aXJlUm9sZSgnQURNSU4nKVxuICAgIGNvbnN0IGJvZHkgPSBhd2FpdCByZXF1ZXN0Lmpzb24oKVxuICAgIGNvbnN0IGRhdGEgPSBjcmVhdGVRdWl6U2NoZW1hLnBhcnNlKGJvZHkpXG5cbiAgICAvLyBWZXJpZnkgdGhlIGNyZWF0b3IgaXMgdGhlIGF1dGhlbnRpY2F0ZWQgdXNlclxuICAgIGlmIChkYXRhLmNyZWF0b3JJZCAhPT0gc2Vzc2lvbi5pZCkge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IGVycm9yOiAnVW5hdXRob3JpemVkJyB9LFxuICAgICAgICB7IHN0YXR1czogNDAzIH1cbiAgICAgIClcbiAgICB9XG5cbiAgICBjb25zdCBxdWl6ID0gYXdhaXQgcHJpc21hLnF1aXouY3JlYXRlKHtcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgdGl0bGU6IGRhdGEudGl0bGUsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBkYXRhLmRlc2NyaXB0aW9uLFxuICAgICAgICBwYXNzaW5nU2NvcmU6IGRhdGEucGFzc2luZ1Njb3JlLFxuICAgICAgICB0aW1lTGltaXQ6IGRhdGEudGltZUxpbWl0LFxuICAgICAgICBpc0FjdGl2ZTogZGF0YS5pc0FjdGl2ZSA/PyBmYWxzZSxcbiAgICAgICAgZW5hYmxlQ2hhdDogZGF0YS5lbmFibGVDaGF0ID8/IGZhbHNlLFxuICAgICAgICBzdGFydEF0OiBkYXRhLnN0YXJ0QXQgPyBuZXcgRGF0ZShkYXRhLnN0YXJ0QXQpIDogbnVsbCxcbiAgICAgICAgY3JlYXRvcklkOiBkYXRhLmNyZWF0b3JJZCxcbiAgICAgICAgcXVlc3Rpb25zOiB7XG4gICAgICAgICAgY3JlYXRlOiBkYXRhLnF1ZXN0aW9ucy5tYXAoKHF1ZXN0aW9uLCBpbmRleCkgPT4gKHtcbiAgICAgICAgICAgIHRleHQ6IHF1ZXN0aW9uLnRleHQsXG4gICAgICAgICAgICB0eXBlOiBxdWVzdGlvbi50eXBlLFxuICAgICAgICAgICAgb3JkZXI6IGluZGV4ICsgMSxcbiAgICAgICAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgICAgICAgY3JlYXRlOiBxdWVzdGlvbi5vcHRpb25zLm1hcCgob3B0aW9uLCBvcHRpb25JbmRleCkgPT4gKHtcbiAgICAgICAgICAgICAgICB0ZXh0OiBvcHRpb24udGV4dCxcbiAgICAgICAgICAgICAgICBpc0NvcnJlY3Q6IG9wdGlvbi5pc0NvcnJlY3QsXG4gICAgICAgICAgICAgICAgb3JkZXI6IG9wdGlvbkluZGV4ICsgMSxcbiAgICAgICAgICAgICAgfSkpLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9KSksXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAgaW5jbHVkZToge1xuICAgICAgICBxdWVzdGlvbnM6IHtcbiAgICAgICAgICBpbmNsdWRlOiB7XG4gICAgICAgICAgICBvcHRpb25zOiB0cnVlLFxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH0pXG5cbiAgICAvLyBBdXRvLWNyZWF0ZSBjaGF0IHJvb21zIGZvciBhbGwgcXVpenplcyBjcmVhdGVkIGJ5IGFkbWluXG4gICAgY29uc29sZS5sb2coYENyZWF0aW5nIGNoYXQgcm9vbXMgZm9yIHF1aXo6ICR7cXVpei50aXRsZX1gKVxuICAgIHRyeSB7XG4gICAgICAvLyBDcmVhdGUgUHJlLVF1aXogRGlzY3Vzc2lvbiBSb29tXG4gICAgICBjb25zb2xlLmxvZygnQ3JlYXRpbmcgcHJlLXF1aXogZGlzY3Vzc2lvbiByb29tLi4uJylcbiAgICAgIGNvbnN0IHByZVF1aXpSb29tID0gYXdhaXQgcHJpc21hLmNoYXRSb29tLmNyZWF0ZSh7XG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICBuYW1lOiBgJHtxdWl6LnRpdGxlfSAtIFByZS1RdWl6IERpc2N1c3Npb25gLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiAnRGlzY3VzcyBxdWl6IHRvcGljcyBhbmQgcHJlcGFyZSB0b2dldGhlciBiZWZvcmUgYXR0ZW1wdGluZycsXG4gICAgICAgICAgdHlwZTogJ1BSRV9RVUlaX0RJU0NVU1NJT04nLFxuICAgICAgICAgIHF1aXpJZDogcXVpei5pZCxcbiAgICAgICAgICBjcmVhdGVkQnk6IGRhdGEuY3JlYXRvcklkLFxuICAgICAgICAgIGFsbG93Q2hhdER1cmluZ1F1aXo6IGZhbHNlLFxuICAgICAgICAgIGlzQWN0aXZlOiB0cnVlLFxuICAgICAgICB9XG4gICAgICB9KVxuXG4gICAgICBhd2FpdCBwcmlzbWEuY2hhdE1lc3NhZ2UuY3JlYXRlKHtcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgIHJvb21JZDogcHJlUXVpelJvb20uaWQsXG4gICAgICAgICAgdXNlcklkOiBkYXRhLmNyZWF0b3JJZCxcbiAgICAgICAgICBjb250ZW50OiBg8J+TmiBQcmUtUXVpeiBEaXNjdXNzaW9uIGZvciBcIiR7cXVpei50aXRsZX1cIiBpcyBub3cgb3BlbiEgRGlzY3VzcyB0b3BpY3MsIGFzayBxdWVzdGlvbnMsIGFuZCBwcmVwYXJlIHRvZ2V0aGVyIGJlZm9yZSBhdHRlbXB0aW5nIHRoZSBxdWl6LmAsXG4gICAgICAgICAgaXNTeXN0ZW1NZXNzYWdlOiB0cnVlXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICBjb25zb2xlLmxvZygnUHJlLXF1aXogcm9vbSBjcmVhdGVkIHN1Y2Nlc3NmdWxseScpXG5cbiAgICAgIC8vIENyZWF0ZSBQb3N0LVF1aXogUmV2aWV3IFJvb20gKGluaXRpYWxseSBpbmFjdGl2ZSlcbiAgICAgIGNvbnNvbGUubG9nKCdDcmVhdGluZyBwb3N0LXF1aXogcmV2aWV3IHJvb20uLi4nKVxuICAgICAgY29uc3QgcG9zdFF1aXpSb29tID0gYXdhaXQgcHJpc21hLmNoYXRSb29tLmNyZWF0ZSh7XG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICBuYW1lOiBgJHtxdWl6LnRpdGxlfSAtIFBvc3QtUXVpeiBSZXZpZXdgLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiAnUmV2aWV3IGFuc3dlcnMgYW5kIGRpc2N1c3MgZXhwbGFuYXRpb25zIGFmdGVyIGNvbXBsZXRpbmcgdGhlIHF1aXonLFxuICAgICAgICAgIHR5cGU6ICdQT1NUX1FVSVpfUkVWSUVXJyxcbiAgICAgICAgICBxdWl6SWQ6IHF1aXouaWQsXG4gICAgICAgICAgY3JlYXRlZEJ5OiBkYXRhLmNyZWF0b3JJZCxcbiAgICAgICAgICBhbGxvd0NoYXREdXJpbmdRdWl6OiBmYWxzZSxcbiAgICAgICAgICBpc0FjdGl2ZTogZmFsc2UsIC8vIFdpbGwgYmUgYWN0aXZhdGVkIHdoZW4gZmlyc3Qgc3R1ZGVudCBjb21wbGV0ZXMgcXVpelxuICAgICAgICB9XG4gICAgICB9KVxuXG4gICAgICBhd2FpdCBwcmlzbWEuY2hhdE1lc3NhZ2UuY3JlYXRlKHtcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgIHJvb21JZDogcG9zdFF1aXpSb29tLmlkLFxuICAgICAgICAgIHVzZXJJZDogZGF0YS5jcmVhdG9ySWQsXG4gICAgICAgICAgY29udGVudDogYPCfjq8gUG9zdC1RdWl6IFJldmlldyBmb3IgXCIke3F1aXoudGl0bGV9XCIgd2lsbCBiZSBhdmFpbGFibGUgYWZ0ZXIgeW91IGNvbXBsZXRlIHRoZSBxdWl6LiBEaXNjdXNzIGFuc3dlcnMsIGV4cGxhbmF0aW9ucywgYW5kIGxlYXJuIGZyb20gZWFjaCBvdGhlciFgLFxuICAgICAgICAgIGlzU3lzdGVtTWVzc2FnZTogdHJ1ZVxuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgY29uc29sZS5sb2coJ1Bvc3QtcXVpeiByb29tIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5JylcblxuICAgICAgLy8gQ3JlYXRlIEdlbmVyYWwgUXVpeiBEaXNjdXNzaW9uIFJvb20gKGFsd2F5cyBhY3RpdmUpXG4gICAgICBjb25zb2xlLmxvZygnQ3JlYXRpbmcgZ2VuZXJhbCBkaXNjdXNzaW9uIHJvb20uLi4nKVxuICAgICAgY29uc3QgZ2VuZXJhbFJvb20gPSBhd2FpdCBwcmlzbWEuY2hhdFJvb20uY3JlYXRlKHtcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgIG5hbWU6IGRhdGEuY2hhdFJvb21OYW1lIHx8IGAke3F1aXoudGl0bGV9IC0gR2VuZXJhbCBEaXNjdXNzaW9uYCxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogJ0dlbmVyYWwgZGlzY3Vzc2lvbiBhYm91dCB0aGUgcXVpeiB0b3BpYycsXG4gICAgICAgICAgdHlwZTogJ1FVSVpfRElTQ1VTU0lPTicsXG4gICAgICAgICAgcXVpeklkOiBxdWl6LmlkLFxuICAgICAgICAgIGNyZWF0ZWRCeTogZGF0YS5jcmVhdG9ySWQsXG4gICAgICAgICAgYWxsb3dDaGF0RHVyaW5nUXVpejogZGF0YS5hbGxvd0NoYXREdXJpbmdRdWl6IHx8IGZhbHNlLFxuICAgICAgICAgIGlzQWN0aXZlOiB0cnVlLFxuICAgICAgICB9XG4gICAgICB9KVxuXG4gICAgICBhd2FpdCBwcmlzbWEuY2hhdE1lc3NhZ2UuY3JlYXRlKHtcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgIHJvb21JZDogZ2VuZXJhbFJvb20uaWQsXG4gICAgICAgICAgdXNlcklkOiBkYXRhLmNyZWF0b3JJZCxcbiAgICAgICAgICBjb250ZW50OiBg8J+SrCBHZW5lcmFsIGRpc2N1c3Npb24gcm9vbSBmb3IgXCIke3F1aXoudGl0bGV9XCIgaXMgbm93IGF2YWlsYWJsZSEgU2hhcmUgaW5zaWdodHMsIGFzayBxdWVzdGlvbnMsIGFuZCBjb2xsYWJvcmF0ZSB3aXRoIHlvdXIgcGVlcnMuYCxcbiAgICAgICAgICBpc1N5c3RlbU1lc3NhZ2U6IHRydWVcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIGNvbnNvbGUubG9nKCdHZW5lcmFsIGRpc2N1c3Npb24gcm9vbSBjcmVhdGVkIHN1Y2Nlc3NmdWxseScpXG5cbiAgICAgIC8vIENyZWF0ZSBzdHVkeSBncm91cCBpZiBlbmFibGVkXG4gICAgICBpZiAoZGF0YS5lbmFibGVTdHVkeUdyb3VwKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdDcmVhdGluZyBzdHVkeSBncm91cC4uLicpXG4gICAgICAgIGNvbnN0IHN0dWR5R3JvdXAgPSBhd2FpdCBwcmlzbWEuc3R1ZHlHcm91cC5jcmVhdGUoe1xuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIG5hbWU6IGAke3F1aXoudGl0bGV9IC0gU3R1ZHkgR3JvdXBgLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246IGBDb2xsYWJvcmF0aXZlIHN0dWR5IGdyb3VwIGZvciAke3F1aXoudGl0bGV9LiBKb2luIHRvIHN0dWR5IHRvZ2V0aGVyIGFuZCBoZWxwIGVhY2ggb3RoZXIgc3VjY2VlZCFgLFxuICAgICAgICAgICAgcXVpeklkOiBxdWl6LmlkLFxuICAgICAgICAgICAgY3JlYXRlZEJ5OiBkYXRhLmNyZWF0b3JJZCxcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG5cbiAgICAgICAgLy8gQ3JlYXRlIHN0dWR5IGdyb3VwIGNoYXQgcm9vbVxuICAgICAgICBjb25zdCBzdHVkeUdyb3VwUm9vbSA9IGF3YWl0IHByaXNtYS5jaGF0Um9vbS5jcmVhdGUoe1xuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIG5hbWU6IGAke3F1aXoudGl0bGV9IC0gU3R1ZHkgR3JvdXAgQ2hhdGAsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogJ1ByaXZhdGUgY2hhdCBmb3Igc3R1ZHkgZ3JvdXAgbWVtYmVycycsXG4gICAgICAgICAgICB0eXBlOiAnU1RVRFlfR1JPVVAnLFxuICAgICAgICAgICAgc3R1ZHlHcm91cElkOiBzdHVkeUdyb3VwLmlkLFxuICAgICAgICAgICAgY3JlYXRlZEJ5OiBkYXRhLmNyZWF0b3JJZCxcbiAgICAgICAgICAgIGFsbG93Q2hhdER1cmluZ1F1aXo6IHRydWUsIC8vIFN0dWR5IGdyb3VwcyBjYW4gY2hhdCBkdXJpbmcgcXVpelxuICAgICAgICAgICAgaXNBY3RpdmU6IHRydWUsXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuXG4gICAgICAgIGF3YWl0IHByaXNtYS5jaGF0TWVzc2FnZS5jcmVhdGUoe1xuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIHJvb21JZDogc3R1ZHlHcm91cFJvb20uaWQsXG4gICAgICAgICAgICB1c2VySWQ6IGRhdGEuY3JlYXRvcklkLFxuICAgICAgICAgICAgY29udGVudDogYPCfkaUgV2VsY29tZSB0byB0aGUgXCIke3F1aXoudGl0bGV9XCIgc3R1ZHkgZ3JvdXAhIFRoaXMgaXMgeW91ciBwcml2YXRlIHNwYWNlIHRvIGNvbGxhYm9yYXRlLCBzaGFyZSByZXNvdXJjZXMsIGFuZCBoZWxwIGVhY2ggb3RoZXIgcHJlcGFyZSBmb3IgdGhlIHF1aXouIEdvb2QgbHVjayFgLFxuICAgICAgICAgICAgaXNTeXN0ZW1NZXNzYWdlOiB0cnVlXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuXG4gICAgICAgIC8vIEF1dG8tYWRkIGNyZWF0b3IgYXMgbW9kZXJhdG9yXG4gICAgICAgIGF3YWl0IHByaXNtYS51c2VyU3R1ZHlHcm91cC5jcmVhdGUoe1xuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIHVzZXJJZDogZGF0YS5jcmVhdG9ySWQsXG4gICAgICAgICAgICBncm91cElkOiBzdHVkeUdyb3VwLmlkLFxuICAgICAgICAgICAgcm9sZTogJ21vZGVyYXRvcidcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIGNvbnNvbGUubG9nKCdTdHVkeSBncm91cCBjcmVhdGVkIHN1Y2Nlc3NmdWxseScpXG4gICAgICB9XG5cbiAgICAgIGNvbnNvbGUubG9nKGDinIUgQXV0by1jcmVhdGVkIGNoYXQgcm9vbXMgZm9yIHF1aXo6ICR7cXVpei50aXRsZX1gKVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCfinYwgRmFpbGVkIHRvIGNyZWF0ZSBjaGF0IHJvb21zIGZvciBxdWl6OicsIGVycm9yKVxuICAgICAgLy8gRG9uJ3QgZmFpbCBxdWl6IGNyZWF0aW9uIGlmIGNoYXQgcm9vbSBjcmVhdGlvbiBmYWlsc1xuICAgIH1cblxuICAgIC8vIEJyb2FkY2FzdCBxdWl6IGNyZWF0aW9uIGlmIGFjdGl2ZVxuICAgIGlmIChxdWl6LmlzQWN0aXZlKSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBJbml0aWFsaXplIFdlYlNvY2tldCBpZiBub3QgYWxyZWFkeSBkb25lXG4gICAgICAgIGNvbnN0IGluaXRSZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke3Byb2Nlc3MuZW52Lk5FWFRBVVRIX1VSTCB8fCAnaHR0cDovL2xvY2FsaG9zdDozMDAxJ30vYXBpL3NvY2tldGlvYCwge1xuICAgICAgICAgIG1ldGhvZDogJ1BPU1QnXG4gICAgICAgIH0pXG4gICAgICAgIFxuICAgICAgICBjb25zdCBpbyA9IChnbG9iYWwgYXMgYW55KS5pb1xuICAgICAgICBpZiAoaW8pIHtcbiAgICAgICAgICBjb25zdCBicm9hZGNhc3QgPSBnZXRCcm9hZGNhc3RJbnN0YW5jZShpbylcbiAgICAgICAgICBhd2FpdCBicm9hZGNhc3QuYnJvYWRjYXN0UXVpelN0YXR1cyh7XG4gICAgICAgICAgICBxdWl6SWQ6IHF1aXouaWQsXG4gICAgICAgICAgICB0eXBlOiAnUFVCTElTSEVEJyxcbiAgICAgICAgICAgIG1lc3NhZ2U6IGBOZXcgcXVpeiBcIiR7cXVpei50aXRsZX1cIiBoYXMgYmVlbiBwdWJsaXNoZWQgYW5kIGlzIG5vdyBhdmFpbGFibGUhYCxcbiAgICAgICAgICAgIHNlbnRCeTogZGF0YS5jcmVhdG9ySWRcbiAgICAgICAgICB9KVxuXG4gICAgICAgICAgLy8gQWxzbyBicm9hZGNhc3QgYXMgYSBnZW5lcmFsIG5vdGlmaWNhdGlvbiB0byBhbGwgc3R1ZGVudHNcbiAgICAgICAgICBpby5lbWl0KCduZXctcXVpei1ub3RpZmljYXRpb24nLCB7XG4gICAgICAgICAgICBpZDogYHF1aXotJHtxdWl6LmlkfWAsXG4gICAgICAgICAgICBtZXNzYWdlOiBg8J+TmiBOZXcgcXVpeiBhdmFpbGFibGU6IFwiJHtxdWl6LnRpdGxlfVwiYCxcbiAgICAgICAgICAgIHF1aXpJZDogcXVpei5pZCxcbiAgICAgICAgICAgIHF1aXpUaXRsZTogcXVpei50aXRsZSxcbiAgICAgICAgICAgIGNyZWF0ZWRBdDogcXVpei5jcmVhdGVkQXRcbiAgICAgICAgICB9KVxuICAgICAgICAgIFxuICAgICAgICAgIGNvbnNvbGUubG9nKCdRdWl6IGNyZWF0aW9uIG5vdGlmaWNhdGlvbiBzZW50OicsIHF1aXoudGl0bGUpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29uc29sZS53YXJuKCdXZWJTb2NrZXQgSU8gbm90IGF2YWlsYWJsZSBmb3IgYnJvYWRjYXN0aW5nJylcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS53YXJuKCdGYWlsZWQgdG8gYnJvYWRjYXN0IHF1aXogY3JlYXRpb246JywgZXJyb3IpXG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHF1aXopXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignQ3JlYXRlIHF1aXogZXJyb3I6JywgZXJyb3IpXG4gICAgaWYgKGVycm9yIGluc3RhbmNlb2Ygei5ab2RFcnJvcikge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IGVycm9yOiAnSW52YWxpZCBkYXRhJywgZGV0YWlsczogZXJyb3IuZXJyb3JzIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDAgfVxuICAgICAgKVxuICAgIH1cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IGVycm9yOiAnSW50ZXJuYWwgc2VydmVyIGVycm9yJyB9LFxuICAgICAgeyBzdGF0dXM6IDUwMCB9XG4gICAgKVxuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IHNlYXJjaFBhcmFtcyB9ID0gbmV3IFVSTChyZXF1ZXN0LnVybClcbiAgICBjb25zdCByb2xlID0gc2VhcmNoUGFyYW1zLmdldCgncm9sZScpXG5cbiAgICBsZXQgcXVpenplc1xuXG4gICAgaWYgKHJvbGUgPT09ICdzdHVkZW50Jykge1xuICAgICAgLy8gVmlzaWJsZSB0byBzdHVkZW50cyBpZiBhY3RpdmVcbiAgICAgIHF1aXp6ZXMgPSBhd2FpdCBwcmlzbWEucXVpei5maW5kTWFueSh7XG4gICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgaXNBY3RpdmU6IHRydWUsXG4gICAgICAgIH0sXG4gICAgICAgIGluY2x1ZGU6IHtcbiAgICAgICAgICBjcmVhdG9yOiB7XG4gICAgICAgICAgICBzZWxlY3Q6IHsgbmFtZTogdHJ1ZSB9LFxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2hhdFJvb21zOiB7XG4gICAgICAgICAgICB3aGVyZTogeyBpc0FjdGl2ZTogdHJ1ZSB9LFxuICAgICAgICAgICAgc2VsZWN0OiB7XG4gICAgICAgICAgICAgIGlkOiB0cnVlLFxuICAgICAgICAgICAgICBuYW1lOiB0cnVlLFxuICAgICAgICAgICAgICB0eXBlOiB0cnVlLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9jb3VudDoge1xuICAgICAgICAgICAgc2VsZWN0OiB7XG4gICAgICAgICAgICAgIHF1ZXN0aW9uczogdHJ1ZSxcbiAgICAgICAgICAgICAgYXR0ZW1wdHM6IHRydWUsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIG9yZGVyQnk6IHsgY3JlYXRlZEF0OiAnZGVzYycgfSxcbiAgICAgIH0pXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIEdldCBxdWl6emVzIGZvciBhZG1pbiAocmVxdWlyZXMgYXV0aGVudGljYXRpb24pXG4gICAgICBjb25zdCBzZXNzaW9uID0gYXdhaXQgcmVxdWlyZVJvbGUoJ0FETUlOJylcbiAgICAgIHF1aXp6ZXMgPSBhd2FpdCBwcmlzbWEucXVpei5maW5kTWFueSh7XG4gICAgICAgIHdoZXJlOiB7IGNyZWF0b3JJZDogc2Vzc2lvbi5pZCB9LFxuICAgICAgICBpbmNsdWRlOiB7XG4gICAgICAgICAgX2NvdW50OiB7XG4gICAgICAgICAgICBzZWxlY3Q6IHtcbiAgICAgICAgICAgICAgcXVlc3Rpb25zOiB0cnVlLFxuICAgICAgICAgICAgICBhdHRlbXB0czogdHJ1ZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgb3JkZXJCeTogeyBjcmVhdGVkQXQ6ICdkZXNjJyB9LFxuICAgICAgfSlcbiAgICB9XG5cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24ocXVpenplcylcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdHZXQgcXVpenplcyBlcnJvcjonLCBlcnJvcilcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IGVycm9yOiAnSW50ZXJuYWwgc2VydmVyIGVycm9yJyB9LFxuICAgICAgeyBzdGF0dXM6IDUwMCB9XG4gICAgKVxuICB9XG59XG4iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwicHJpc21hIiwicmVxdWlyZVJvbGUiLCJ6IiwiZ2V0QnJvYWRjYXN0SW5zdGFuY2UiLCJkeW5hbWljIiwiY3JlYXRlUXVpelNjaGVtYSIsIm9iamVjdCIsInRpdGxlIiwic3RyaW5nIiwibWluIiwiZGVzY3JpcHRpb24iLCJvcHRpb25hbCIsInBhc3NpbmdTY29yZSIsIm51bWJlciIsIm1heCIsInRpbWVMaW1pdCIsImlzQWN0aXZlIiwiYm9vbGVhbiIsInN0YXJ0QXQiLCJkYXRldGltZSIsImNyZWF0b3JJZCIsImVuYWJsZUNoYXQiLCJjaGF0Um9vbU5hbWUiLCJhbGxvd0NoYXREdXJpbmdRdWl6IiwiZW5hYmxlU3R1ZHlHcm91cCIsInF1ZXN0aW9ucyIsImFycmF5IiwidGV4dCIsInR5cGUiLCJlbnVtIiwib3B0aW9ucyIsImlzQ29ycmVjdCIsInJlZmluZSIsInF1ZXN0aW9uIiwiY29ycmVjdENvdW50IiwiZmlsdGVyIiwib3B0aW9uIiwibGVuZ3RoIiwibWVzc2FnZSIsIlBPU1QiLCJyZXF1ZXN0Iiwic2Vzc2lvbiIsImJvZHkiLCJqc29uIiwiZGF0YSIsInBhcnNlIiwiaWQiLCJlcnJvciIsInN0YXR1cyIsInF1aXoiLCJjcmVhdGUiLCJEYXRlIiwibWFwIiwiaW5kZXgiLCJvcmRlciIsIm9wdGlvbkluZGV4IiwiaW5jbHVkZSIsImNvbnNvbGUiLCJsb2ciLCJwcmVRdWl6Um9vbSIsImNoYXRSb29tIiwibmFtZSIsInF1aXpJZCIsImNyZWF0ZWRCeSIsImNoYXRNZXNzYWdlIiwicm9vbUlkIiwidXNlcklkIiwiY29udGVudCIsImlzU3lzdGVtTWVzc2FnZSIsInBvc3RRdWl6Um9vbSIsImdlbmVyYWxSb29tIiwic3R1ZHlHcm91cCIsInN0dWR5R3JvdXBSb29tIiwic3R1ZHlHcm91cElkIiwidXNlclN0dWR5R3JvdXAiLCJncm91cElkIiwicm9sZSIsImluaXRSZXNwb25zZSIsImZldGNoIiwicHJvY2VzcyIsImVudiIsIk5FWFRBVVRIX1VSTCIsIm1ldGhvZCIsImlvIiwiZ2xvYmFsIiwiYnJvYWRjYXN0IiwiYnJvYWRjYXN0UXVpelN0YXR1cyIsInNlbnRCeSIsImVtaXQiLCJxdWl6VGl0bGUiLCJjcmVhdGVkQXQiLCJ3YXJuIiwiWm9kRXJyb3IiLCJkZXRhaWxzIiwiZXJyb3JzIiwiR0VUIiwic2VhcmNoUGFyYW1zIiwiVVJMIiwidXJsIiwiZ2V0IiwicXVpenplcyIsImZpbmRNYW55Iiwid2hlcmUiLCJjcmVhdG9yIiwic2VsZWN0IiwiY2hhdFJvb21zIiwiX2NvdW50IiwiYXR0ZW1wdHMiLCJvcmRlckJ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/quizzes/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/auth.ts":
/*!*************************!*\
  !*** ./src/lib/auth.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSession: () => (/* binding */ getSession),\n/* harmony export */   requireAuth: () => (/* binding */ requireAuth),\n/* harmony export */   requireRole: () => (/* binding */ requireRole)\n/* harmony export */ });\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n\nasync function getSession() {\n    try {\n        const cookieStore = (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies)();\n        const sessionCookie = cookieStore.get(\"user-session\");\n        if (!sessionCookie || !sessionCookie.value) {\n            return null;\n        }\n        // Validate that the cookie value is not empty or malformed\n        if (sessionCookie.value.trim() === \"\") {\n            return null;\n        }\n        const session = JSON.parse(sessionCookie.value);\n        // Validate that the session has required fields\n        if (!session || !session.id || !session.email || !session.name || !session.role) {\n            console.warn(\"Invalid session structure:\", session);\n            return null;\n        }\n        return session;\n    } catch (error) {\n        console.error(\"Error getting session:\", error);\n        return null;\n    }\n}\nasync function requireAuth() {\n    const session = await getSession();\n    if (!session) {\n        throw new Error(\"Authentication required\");\n    }\n    return session;\n}\nasync function requireRole(role) {\n    const session = await requireAuth();\n    if (session.role !== role) {\n        throw new Error(`Access denied. Required role: ${role}`);\n    }\n    return session;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2F1dGgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFzQztBQVUvQixlQUFlQztJQUNwQixJQUFJO1FBQ0YsTUFBTUMsY0FBY0YscURBQU9BO1FBQzNCLE1BQU1HLGdCQUFnQkQsWUFBWUUsR0FBRyxDQUFDO1FBRXRDLElBQUksQ0FBQ0QsaUJBQWlCLENBQUNBLGNBQWNFLEtBQUssRUFBRTtZQUMxQyxPQUFPO1FBQ1Q7UUFFQSwyREFBMkQ7UUFDM0QsSUFBSUYsY0FBY0UsS0FBSyxDQUFDQyxJQUFJLE9BQU8sSUFBSTtZQUNyQyxPQUFPO1FBQ1Q7UUFFQSxNQUFNQyxVQUFVQyxLQUFLQyxLQUFLLENBQUNOLGNBQWNFLEtBQUs7UUFFOUMsZ0RBQWdEO1FBQ2hELElBQUksQ0FBQ0UsV0FBVyxDQUFDQSxRQUFRRyxFQUFFLElBQUksQ0FBQ0gsUUFBUUksS0FBSyxJQUFJLENBQUNKLFFBQVFLLElBQUksSUFBSSxDQUFDTCxRQUFRTSxJQUFJLEVBQUU7WUFDL0VDLFFBQVFDLElBQUksQ0FBQyw4QkFBOEJSO1lBQzNDLE9BQU87UUFDVDtRQUVBLE9BQU9BO0lBQ1QsRUFBRSxPQUFPUyxPQUFPO1FBQ2RGLFFBQVFFLEtBQUssQ0FBQywwQkFBMEJBO1FBQ3hDLE9BQU87SUFDVDtBQUNGO0FBRU8sZUFBZUM7SUFDcEIsTUFBTVYsVUFBVSxNQUFNTjtJQUN0QixJQUFJLENBQUNNLFNBQVM7UUFDWixNQUFNLElBQUlXLE1BQU07SUFDbEI7SUFDQSxPQUFPWDtBQUNUO0FBRU8sZUFBZVksWUFBWU4sSUFBYztJQUM5QyxNQUFNTixVQUFVLE1BQU1VO0lBQ3RCLElBQUlWLFFBQVFNLElBQUksS0FBS0EsTUFBTTtRQUN6QixNQUFNLElBQUlLLE1BQU0sQ0FBQyw4QkFBOEIsRUFBRUwsS0FBSyxDQUFDO0lBQ3pEO0lBQ0EsT0FBT047QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL3F1aXotbWFuYWdlbWVudC1zeXN0ZW0vLi9zcmMvbGliL2F1dGgudHM/NjY5MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb29raWVzIH0gZnJvbSAnbmV4dC9oZWFkZXJzJ1xuaW1wb3J0IHsgVXNlclJvbGUgfSBmcm9tICdAL3R5cGVzJ1xuXG5leHBvcnQgaW50ZXJmYWNlIFNlc3Npb25Vc2VyIHtcbiAgaWQ6IHN0cmluZ1xuICBlbWFpbDogc3RyaW5nXG4gIG5hbWU6IHN0cmluZ1xuICByb2xlOiBVc2VyUm9sZVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2Vzc2lvbigpOiBQcm9taXNlPFNlc3Npb25Vc2VyIHwgbnVsbD4ge1xuICB0cnkge1xuICAgIGNvbnN0IGNvb2tpZVN0b3JlID0gY29va2llcygpXG4gICAgY29uc3Qgc2Vzc2lvbkNvb2tpZSA9IGNvb2tpZVN0b3JlLmdldCgndXNlci1zZXNzaW9uJylcbiAgICBcbiAgICBpZiAoIXNlc3Npb25Db29raWUgfHwgIXNlc3Npb25Db29raWUudmFsdWUpIHtcbiAgICAgIHJldHVybiBudWxsXG4gICAgfVxuXG4gICAgLy8gVmFsaWRhdGUgdGhhdCB0aGUgY29va2llIHZhbHVlIGlzIG5vdCBlbXB0eSBvciBtYWxmb3JtZWRcbiAgICBpZiAoc2Vzc2lvbkNvb2tpZS52YWx1ZS50cmltKCkgPT09ICcnKSB7XG4gICAgICByZXR1cm4gbnVsbFxuICAgIH1cblxuICAgIGNvbnN0IHNlc3Npb24gPSBKU09OLnBhcnNlKHNlc3Npb25Db29raWUudmFsdWUpXG4gICAgXG4gICAgLy8gVmFsaWRhdGUgdGhhdCB0aGUgc2Vzc2lvbiBoYXMgcmVxdWlyZWQgZmllbGRzXG4gICAgaWYgKCFzZXNzaW9uIHx8ICFzZXNzaW9uLmlkIHx8ICFzZXNzaW9uLmVtYWlsIHx8ICFzZXNzaW9uLm5hbWUgfHwgIXNlc3Npb24ucm9sZSkge1xuICAgICAgY29uc29sZS53YXJuKCdJbnZhbGlkIHNlc3Npb24gc3RydWN0dXJlOicsIHNlc3Npb24pXG4gICAgICByZXR1cm4gbnVsbFxuICAgIH1cblxuICAgIHJldHVybiBzZXNzaW9uXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZ2V0dGluZyBzZXNzaW9uOicsIGVycm9yKVxuICAgIHJldHVybiBudWxsXG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJlcXVpcmVBdXRoKCk6IFByb21pc2U8U2Vzc2lvblVzZXI+IHtcbiAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IGdldFNlc3Npb24oKVxuICBpZiAoIXNlc3Npb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0F1dGhlbnRpY2F0aW9uIHJlcXVpcmVkJylcbiAgfVxuICByZXR1cm4gc2Vzc2lvblxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcmVxdWlyZVJvbGUocm9sZTogVXNlclJvbGUpOiBQcm9taXNlPFNlc3Npb25Vc2VyPiB7XG4gIGNvbnN0IHNlc3Npb24gPSBhd2FpdCByZXF1aXJlQXV0aCgpXG4gIGlmIChzZXNzaW9uLnJvbGUgIT09IHJvbGUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYEFjY2VzcyBkZW5pZWQuIFJlcXVpcmVkIHJvbGU6ICR7cm9sZX1gKVxuICB9XG4gIHJldHVybiBzZXNzaW9uXG59XG4iXSwibmFtZXMiOlsiY29va2llcyIsImdldFNlc3Npb24iLCJjb29raWVTdG9yZSIsInNlc3Npb25Db29raWUiLCJnZXQiLCJ2YWx1ZSIsInRyaW0iLCJzZXNzaW9uIiwiSlNPTiIsInBhcnNlIiwiaWQiLCJlbWFpbCIsIm5hbWUiLCJyb2xlIiwiY29uc29sZSIsIndhcm4iLCJlcnJvciIsInJlcXVpcmVBdXRoIiwiRXJyb3IiLCJyZXF1aXJlUm9sZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/auth.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/prisma.ts":
/*!***************************!*\
  !*** ./src/lib/prisma.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst globalForPrisma = globalThis;\nconst prisma = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nif (true) globalForPrisma.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3ByaXNtYS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNkM7QUFFN0MsTUFBTUMsa0JBQWtCQztBQUlqQixNQUFNQyxTQUFTRixnQkFBZ0JFLE1BQU0sSUFBSSxJQUFJSCx3REFBWUEsR0FBRTtBQUVsRSxJQUFJSSxJQUF5QixFQUFjSCxnQkFBZ0JFLE1BQU0sR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWl6LW1hbmFnZW1lbnQtc3lzdGVtLy4vc3JjL2xpYi9wcmlzbWEudHM/MDFkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcmlzbWFDbGllbnQgfSBmcm9tICdAcHJpc21hL2NsaWVudCdcblxuY29uc3QgZ2xvYmFsRm9yUHJpc21hID0gZ2xvYmFsVGhpcyBhcyB1bmtub3duIGFzIHtcbiAgcHJpc21hOiBQcmlzbWFDbGllbnQgfCB1bmRlZmluZWRcbn1cblxuZXhwb3J0IGNvbnN0IHByaXNtYSA9IGdsb2JhbEZvclByaXNtYS5wcmlzbWEgPz8gbmV3IFByaXNtYUNsaWVudCgpXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSBnbG9iYWxGb3JQcmlzbWEucHJpc21hID0gcHJpc21hXG4iXSwibmFtZXMiOlsiUHJpc21hQ2xpZW50IiwiZ2xvYmFsRm9yUHJpc21hIiwiZ2xvYmFsVGhpcyIsInByaXNtYSIsInByb2Nlc3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/prisma.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/realtime-broadcast.ts":
/*!***************************************!*\
  !*** ./src/lib/realtime-broadcast.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RealtimeBroadcast: () => (/* binding */ RealtimeBroadcast),\n/* harmony export */   getBroadcastInstance: () => (/* binding */ getBroadcastInstance)\n/* harmony export */ });\n/* harmony import */ var _prisma__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./prisma */ \"(rsc)/./src/lib/prisma.ts\");\n\nclass RealtimeBroadcast {\n    constructor(io){\n        this.io = io;\n    }\n    // Quiz Status Broadcasting\n    async broadcastQuizStatus(data) {\n        try {\n            // Save broadcast to database\n            const broadcast = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.quizBroadcast.create({\n                data: {\n                    quizId: data.quizId,\n                    type: data.type,\n                    message: data.message,\n                    sentBy: data.sentBy\n                },\n                include: {\n                    quiz: {\n                        select: {\n                            title: true,\n                            chatRooms: {\n                                select: {\n                                    id: true\n                                }\n                            },\n                            studyGroups: {\n                                select: {\n                                    id: true,\n                                    chatRooms: {\n                                        select: {\n                                            id: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    sender: {\n                        select: {\n                            name: true,\n                            role: true\n                        }\n                    }\n                }\n            });\n            // Broadcast to all quiz-related chat rooms\n            const roomIds = [\n                ...broadcast.quiz.chatRooms.map((room)=>room.id),\n                ...broadcast.quiz.studyGroups.flatMap((group)=>group.chatRooms.map((room)=>room.id))\n            ];\n            for (const roomId of roomIds){\n                this.io.to(roomId).emit(\"quiz-status-update\", {\n                    id: broadcast.id,\n                    quizId: data.quizId,\n                    quizTitle: broadcast.quiz.title,\n                    type: data.type,\n                    message: data.message,\n                    sender: broadcast.sender,\n                    timestamp: broadcast.timestamp\n                });\n            }\n            // Also broadcast to general announcement channel\n            this.io.emit(\"quiz-announcement\", {\n                id: broadcast.id,\n                quizId: data.quizId,\n                quizTitle: broadcast.quiz.title,\n                type: data.type,\n                message: data.message,\n                sender: broadcast.sender,\n                timestamp: broadcast.timestamp\n            });\n            return broadcast;\n        } catch (error) {\n            console.error(\"Error broadcasting quiz status:\", error);\n            throw error;\n        }\n    }\n    // Study Group Progress Updates\n    async broadcastStudyProgress(data) {\n        try {\n            // Get study group details\n            const studyGroup = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.studyGroup.findUnique({\n                where: {\n                    id: data.studyGroupId\n                },\n                include: {\n                    chatRooms: {\n                        select: {\n                            id: true\n                        }\n                    },\n                    members: {\n                        include: {\n                            user: {\n                                select: {\n                                    id: true,\n                                    name: true\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n            if (!studyGroup) {\n                throw new Error(\"Study group not found\");\n            }\n            const user = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.user.findUnique({\n                where: {\n                    id: data.userId\n                },\n                select: {\n                    name: true,\n                    role: true\n                }\n            });\n            // Broadcast to study group chat rooms\n            for (const room of studyGroup.chatRooms){\n                this.io.to(room.id).emit(\"study-progress-update\", {\n                    studyGroupId: data.studyGroupId,\n                    studyGroupName: studyGroup.name,\n                    userId: data.userId,\n                    userName: user?.name,\n                    progressType: data.progressType,\n                    message: data.message,\n                    data: data.data,\n                    timestamp: new Date().toISOString()\n                });\n            }\n            // Send system message to chat rooms\n            for (const room of studyGroup.chatRooms){\n                await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.chatMessage.create({\n                    data: {\n                        roomId: room.id,\n                        userId: data.userId,\n                        content: data.message,\n                        isSystemMessage: true\n                    }\n                });\n                this.io.to(room.id).emit(\"new-message\", {\n                    id: Date.now().toString(),\n                    content: data.message,\n                    user: {\n                        id: data.userId,\n                        name: user?.name || \"System\",\n                        role: user?.role || \"SYSTEM\"\n                    },\n                    createdAt: new Date().toISOString(),\n                    isSystemMessage: true\n                });\n            }\n        } catch (error) {\n            console.error(\"Error broadcasting study progress:\", error);\n            throw error;\n        }\n    }\n    // Instructor Presence Broadcasting\n    async broadcastInstructorPresence(userId, isOnline, roomId) {\n        try {\n            const user = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.user.findUnique({\n                where: {\n                    id: userId\n                },\n                select: {\n                    name: true,\n                    role: true\n                }\n            });\n            if (!user || user.role !== \"TEACHER\" && user.role !== \"ADMIN\") {\n                return;\n            }\n            const presenceData = {\n                userId,\n                userName: user.name,\n                userRole: user.role,\n                isOnline,\n                timestamp: new Date().toISOString()\n            };\n            if (roomId) {\n                // Broadcast to specific room\n                this.io.to(roomId).emit(\"instructor-presence-update\", {\n                    ...presenceData,\n                    roomId\n                });\n            } else {\n                // Broadcast globally\n                this.io.emit(\"instructor-presence-update\", presenceData);\n            }\n        } catch (error) {\n            console.error(\"Error broadcasting instructor presence:\", error);\n        }\n    }\n    // Live Study Session Updates\n    async broadcastStudySessionUpdate(sessionId, updateData) {\n        try {\n            const session = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.studySession.findUnique({\n                where: {\n                    id: sessionId\n                },\n                include: {\n                    creator: {\n                        select: {\n                            name: true\n                        }\n                    },\n                    studyGroup: {\n                        select: {\n                            name: true\n                        }\n                    },\n                    quiz: {\n                        select: {\n                            title: true\n                        }\n                    }\n                }\n            });\n            if (!session) {\n                throw new Error(\"Study session not found\");\n            }\n            const broadcastData = {\n                sessionId,\n                sessionName: session.name,\n                studyGroupName: session.studyGroup?.name,\n                quizTitle: session.quiz?.title,\n                type: updateData.type,\n                message: updateData.message,\n                data: updateData.data,\n                timestamp: new Date().toISOString()\n            };\n            // Broadcast to study session participants\n            this.io.to(`study-session-${sessionId}`).emit(\"study-session-update\", broadcastData);\n            // Also broadcast to related study group chat rooms if exists\n            if (session.studyGroupId) {\n                const studyGroup = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.studyGroup.findUnique({\n                    where: {\n                        id: session.studyGroupId\n                    },\n                    include: {\n                        chatRooms: {\n                            select: {\n                                id: true\n                            }\n                        }\n                    }\n                });\n                if (studyGroup) {\n                    for (const room of studyGroup.chatRooms){\n                        this.io.to(room.id).emit(\"study-session-update\", broadcastData);\n                    }\n                }\n            }\n        } catch (error) {\n            console.error(\"Error broadcasting study session update:\", error);\n        }\n    }\n}\n// Singleton instance\nlet broadcastInstance = null;\nconst getBroadcastInstance = (io)=>{\n    if (!broadcastInstance && io) {\n        broadcastInstance = new RealtimeBroadcast(io);\n    }\n    if (!broadcastInstance) {\n        throw new Error(\"Broadcast instance not initialized\");\n    }\n    return broadcastInstance;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/realtime-broadcast.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/zod"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fquizzes%2Froute&page=%2Fapi%2Fquizzes%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fquizzes%2Froute.ts&appDir=C%3A%5CUsers%5CHP%5CDocuments%5CInfTech-quiz-management-system%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CHP%5CDocuments%5CInfTech-quiz-management-system&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();