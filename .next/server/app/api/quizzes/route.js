"use strict";(()=>{var e={};e.id=6645,e.ids=[6645],e.modules={53524:e=>{e.exports=require("@prisma/client")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},17946:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>f,patchFetch:()=>x,requestAsyncStorage:()=>q,routeModule:()=>I,serverHooks:()=>z,staticGenerationAsyncStorage:()=>w});var s={};r.r(s),r.d(s,{GET:()=>g,POST:()=>h,dynamic:()=>p});var a=r(49303),o=r(88716),i=r(60670),n=r(87070),u=r(13538),c=r(95456),d=r(91585),l=r(26033),m=r(3950);let p="force-dynamic",y=d.Ry({title:d.Z_().min(1),description:d.Z_().optional(),passingScore:d.Rx().min(0).max(100),timeLimit:d.Rx().min(1).optional(),isActive:d.O7().optional(),startAt:d.Z_().datetime().optional(),creatorId:d.Z_(),enableChat:d.O7().optional(),chatRoomName:d.Z_().optional(),allowChatDuringQuiz:d.O7().optional(),enableStudyGroup:d.O7().optional(),isExam:d.O7().optional(),examEndTime:d.Z_().optional().refine(e=>!e||/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}(:\d{2})?(\.\d{3})?Z?$/.test(e)||/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}$/.test(e),{message:"Invalid datetime format"}),examDuration:d.Rx().min(1).optional(),questions:d.IX(d.Ry({text:d.Z_().min(1),type:d.Km(["MULTIPLE_CHOICE","TRUE_FALSE"]),options:d.IX(d.Ry({text:d.Z_().min(1),isCorrect:d.O7()})).min(2)}).refine(e=>1===e.options.filter(e=>e.isCorrect).length,{message:"Exactly one option must be marked as correct"})).min(1)});async function h(e){try{let t=await (0,c.MH)("ADMIN"),r=await e.json(),s=y.parse(r);if(s.creatorId!==t.id)return n.NextResponse.json({error:"Unauthorized"},{status:403});let a=await u._.quiz.create({data:{title:s.title,description:s.description,passingScore:s.passingScore,timeLimit:s.timeLimit,isActive:s.isActive??!1,enableChat:s.enableChat??!1,startAt:s.startAt?new Date(s.startAt):null,creatorId:s.creatorId,isExam:s.isExam??!1,examEndTime:s.examEndTime?new Date(s.examEndTime):null,examDuration:s.examDuration,questions:{create:s.questions.map((e,t)=>({text:e.text,type:e.type,order:t+1,options:{create:e.options.map((e,t)=>({text:e.text,isCorrect:e.isCorrect,order:t+1}))}}))}},include:{questions:{include:{options:!0}}}});if(a.isExam)console.log(`📝 Exam created: ${a.title} - No chat rooms will be created until exam ends`),console.log(`Exam end time: ${a.examEndTime}`),console.log("Chat rooms will be auto-created after exam ends");else{console.log(`Creating chat rooms for quiz: ${a.title}`);try{console.log("Creating pre-quiz discussion room...");let e=await u._.chatRoom.create({data:{name:`${a.title} - Pre-Quiz Discussion`,description:"Discuss quiz topics and prepare together before attempting",type:"PRE_QUIZ_DISCUSSION",quizId:a.id,createdBy:s.creatorId,allowChatDuringQuiz:!1,isActive:!0}});await u._.chatMessage.create({data:{roomId:e.id,userId:s.creatorId,content:`📚 Pre-Quiz Discussion for "${a.title}" is now open! Discuss topics, ask questions, and prepare together before attempting the quiz.`,isSystemMessage:!0}}),console.log("Pre-quiz room created successfully"),console.log("Creating post-quiz review room...");let t=await u._.chatRoom.create({data:{name:`${a.title} - Post-Quiz Review`,description:"Review answers and discuss explanations after completing the quiz",type:"POST_QUIZ_REVIEW",quizId:a.id,createdBy:s.creatorId,allowChatDuringQuiz:!1,isActive:!1}});await u._.chatMessage.create({data:{roomId:t.id,userId:s.creatorId,content:`🎯 Post-Quiz Review for "${a.title}" will be available after you complete the quiz. Discuss answers, explanations, and learn from each other!`,isSystemMessage:!0}}),console.log("Post-quiz room created successfully"),console.log("Creating general discussion room...");let r=await u._.chatRoom.create({data:{name:s.chatRoomName||`${a.title} - General Discussion`,description:"General discussion about the quiz topic",type:"QUIZ_DISCUSSION",quizId:a.id,createdBy:s.creatorId,allowChatDuringQuiz:s.allowChatDuringQuiz||!1,isActive:!0}});if(await u._.chatMessage.create({data:{roomId:r.id,userId:s.creatorId,content:`💬 General discussion room for "${a.title}" is now available! Share insights, ask questions, and collaborate with your peers.`,isSystemMessage:!0}}),console.log("General discussion room created successfully"),s.enableStudyGroup){console.log("Creating study group...");let e=await u._.studyGroup.create({data:{name:`${a.title} - Study Group`,description:`Collaborative study group for ${a.title}. Join to study together and help each other succeed!`,quizId:a.id,createdBy:s.creatorId}}),t=await u._.chatRoom.create({data:{name:`${a.title} - Study Group Chat`,description:"Private chat for study group members",type:"STUDY_GROUP",studyGroupId:e.id,createdBy:s.creatorId,allowChatDuringQuiz:!0,isActive:!0}});await u._.chatMessage.create({data:{roomId:t.id,userId:s.creatorId,content:`👥 Welcome to the "${a.title}" study group! This is your private space to collaborate, share resources, and help each other prepare for the quiz. Good luck!`,isSystemMessage:!0}}),await u._.userStudyGroup.create({data:{userId:s.creatorId,groupId:e.id,role:"moderator"}}),console.log("Study group created successfully")}console.log(`✅ Auto-created chat rooms for quiz: ${a.title}`)}catch(e){console.error("❌ Failed to create chat rooms for quiz:",e)}}if(a.isActive)try{await fetch(`${process.env.NEXTAUTH_URL||"http://localhost:3001"}/api/socketio`,{method:"POST"});let e=global.io;if(e){let t=(0,m.I)(e);await t.broadcastQuizStatus({quizId:a.id,type:"PUBLISHED",message:`New quiz "${a.title}" has been published and is now available!`,sentBy:s.creatorId}),e.emit("new-quiz-notification",{id:`quiz-${a.id}`,message:`📚 New quiz available: "${a.title}"`,quizId:a.id,quizTitle:a.title,createdAt:a.createdAt}),console.log("Quiz creation notification sent:",a.title)}else console.warn("WebSocket IO not available for broadcasting")}catch(e){console.warn("Failed to broadcast quiz creation:",e)}return n.NextResponse.json(a)}catch(e){if(console.error("Create quiz error:",e),e instanceof l.jm)return n.NextResponse.json({error:"Invalid data",details:e.errors},{status:400});return n.NextResponse.json({error:"Internal server error"},{status:500})}}async function g(e){try{let t;let{searchParams:r}=new URL(e.url),s=r.get("role");if("student"===s)t=await u._.quiz.findMany({where:{isActive:!0},include:{creator:{select:{name:!0}},chatRooms:{where:{isActive:!0},select:{id:!0,name:!0,type:!0}},_count:{select:{questions:!0,attempts:!0}}},orderBy:{createdAt:"desc"}});else{let e=await (0,c.MH)("ADMIN");t=await u._.quiz.findMany({where:{creatorId:e.id},include:{_count:{select:{questions:!0,attempts:!0}}},orderBy:{createdAt:"desc"}})}return n.NextResponse.json(t)}catch(e){return console.error("Get quizzes error:",e),n.NextResponse.json({error:"Internal server error"},{status:500})}}let I=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/quizzes/route",pathname:"/api/quizzes",filename:"route",bundlePath:"app/api/quizzes/route"},resolvedPagePath:"C:\\Users\\HP\\Documents\\InfTech-quiz-management-system\\src\\app\\api\\quizzes\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:q,staticGenerationAsyncStorage:w,serverHooks:z}=I,f="/api/quizzes/route";function x(){return(0,i.patchFetch)({serverHooks:z,staticGenerationAsyncStorage:w})}},95456:(e,t,r)=>{r.d(t,{Gg:()=>a,MH:()=>i});var s=r(71615);async function a(){try{let e=(0,s.cookies)().get("user-session");if(!e||!e.value||""===e.value.trim())return null;let t=JSON.parse(e.value);if(!t||!t.id||!t.email||!t.name||!t.role)return console.warn("Invalid session structure:",t),null;return t}catch(e){return console.error("Error getting session:",e),null}}async function o(){let e=await a();if(!e)throw Error("Authentication required");return e}async function i(e){let t=await o();if(t.role!==e)throw Error(`Access denied. Required role: ${e}`);return t}},13538:(e,t,r)=>{r.d(t,{_:()=>a});var s=r(53524);let a=globalThis.prisma??new s.PrismaClient},3950:(e,t,r)=>{r.d(t,{I:()=>i});var s=r(13538);class a{constructor(e){this.io=e}async broadcastQuizStatus(e){try{let t=await s._.quizBroadcast.create({data:{quizId:e.quizId,type:e.type,message:e.message,sentBy:e.sentBy},include:{quiz:{select:{title:!0,chatRooms:{select:{id:!0}},studyGroups:{select:{id:!0,chatRooms:{select:{id:!0}}}}}},sender:{select:{name:!0,role:!0}}}});for(let r of[...t.quiz.chatRooms.map(e=>e.id),...t.quiz.studyGroups.flatMap(e=>e.chatRooms.map(e=>e.id))])this.io.to(r).emit("quiz-status-update",{id:t.id,quizId:e.quizId,quizTitle:t.quiz.title,type:e.type,message:e.message,sender:t.sender,timestamp:t.timestamp});return this.io.emit("quiz-announcement",{id:t.id,quizId:e.quizId,quizTitle:t.quiz.title,type:e.type,message:e.message,sender:t.sender,timestamp:t.timestamp}),t}catch(e){throw console.error("Error broadcasting quiz status:",e),e}}async broadcastStudyProgress(e){try{let t=await s._.studyGroup.findUnique({where:{id:e.studyGroupId},include:{chatRooms:{select:{id:!0}},members:{include:{user:{select:{id:!0,name:!0}}}}}});if(!t)throw Error("Study group not found");let r=await s._.user.findUnique({where:{id:e.userId},select:{name:!0,role:!0}});for(let s of t.chatRooms)this.io.to(s.id).emit("study-progress-update",{studyGroupId:e.studyGroupId,studyGroupName:t.name,userId:e.userId,userName:r?.name,progressType:e.progressType,message:e.message,data:e.data,timestamp:new Date().toISOString()});for(let a of t.chatRooms)await s._.chatMessage.create({data:{roomId:a.id,userId:e.userId,content:e.message,isSystemMessage:!0}}),this.io.to(a.id).emit("new-message",{id:Date.now().toString(),content:e.message,user:{id:e.userId,name:r?.name||"System",role:r?.role||"SYSTEM"},createdAt:new Date().toISOString(),isSystemMessage:!0})}catch(e){throw console.error("Error broadcasting study progress:",e),e}}async broadcastInstructorPresence(e,t,r){try{let a=await s._.user.findUnique({where:{id:e},select:{name:!0,role:!0}});if(!a||"TEACHER"!==a.role&&"ADMIN"!==a.role)return;let o={userId:e,userName:a.name,userRole:a.role,isOnline:t,timestamp:new Date().toISOString()};r?this.io.to(r).emit("instructor-presence-update",{...o,roomId:r}):this.io.emit("instructor-presence-update",o)}catch(e){console.error("Error broadcasting instructor presence:",e)}}async broadcastStudySessionUpdate(e,t){try{let r=await s._.studySession.findUnique({where:{id:e},include:{creator:{select:{name:!0}},studyGroup:{select:{name:!0}},quiz:{select:{title:!0}}}});if(!r)throw Error("Study session not found");let a={sessionId:e,sessionName:r.name,studyGroupName:r.studyGroup?.name,quizTitle:r.quiz?.title,type:t.type,message:t.message,data:t.data,timestamp:new Date().toISOString()};if(this.io.to(`study-session-${e}`).emit("study-session-update",a),r.studyGroupId){let e=await s._.studyGroup.findUnique({where:{id:r.studyGroupId},include:{chatRooms:{select:{id:!0}}}});if(e)for(let t of e.chatRooms)this.io.to(t.id).emit("study-session-update",a)}}catch(e){console.error("Error broadcasting study session update:",e)}}}let o=null,i=e=>{if(!o&&e&&(o=new a(e)),!o)throw Error("Broadcast instance not initialized");return o}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[9276,1615,5972,1585],()=>r(17946));module.exports=s})();