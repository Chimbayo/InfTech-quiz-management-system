"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/quizzes/route";
exports.ids = ["app/api/quizzes/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fquizzes%2Froute&page=%2Fapi%2Fquizzes%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fquizzes%2Froute.ts&appDir=C%3A%5CUsers%5CHP%5CDocuments%5CInfTech-quiz-management-system%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CHP%5CDocuments%5CInfTech-quiz-management-system&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fquizzes%2Froute&page=%2Fapi%2Fquizzes%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fquizzes%2Froute.ts&appDir=C%3A%5CUsers%5CHP%5CDocuments%5CInfTech-quiz-management-system%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CHP%5CDocuments%5CInfTech-quiz-management-system&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_HP_Documents_InfTech_quiz_management_system_src_app_api_quizzes_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/quizzes/route.ts */ \"(rsc)/./src/app/api/quizzes/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/quizzes/route\",\n        pathname: \"/api/quizzes\",\n        filename: \"route\",\n        bundlePath: \"app/api/quizzes/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\HP\\\\Documents\\\\InfTech-quiz-management-system\\\\src\\\\app\\\\api\\\\quizzes\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_HP_Documents_InfTech_quiz_management_system_src_app_api_quizzes_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/quizzes/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZxdWl6emVzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZxdWl6emVzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGcXVpenplcyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNIUCU1Q0RvY3VtZW50cyU1Q0luZlRlY2gtcXVpei1tYW5hZ2VtZW50LXN5c3RlbSU1Q3NyYyU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDSFAlNUNEb2N1bWVudHMlNUNJbmZUZWNoLXF1aXotbWFuYWdlbWVudC1zeXN0ZW0maXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQzBDO0FBQ3ZIO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVpei1tYW5hZ2VtZW50LXN5c3RlbS8/NDMzOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxIUFxcXFxEb2N1bWVudHNcXFxcSW5mVGVjaC1xdWl6LW1hbmFnZW1lbnQtc3lzdGVtXFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXHF1aXp6ZXNcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3F1aXp6ZXMvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9xdWl6emVzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9xdWl6emVzL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVXNlcnNcXFxcSFBcXFxcRG9jdW1lbnRzXFxcXEluZlRlY2gtcXVpei1tYW5hZ2VtZW50LXN5c3RlbVxcXFxzcmNcXFxcYXBwXFxcXGFwaVxcXFxxdWl6emVzXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9xdWl6emVzL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fquizzes%2Froute&page=%2Fapi%2Fquizzes%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fquizzes%2Froute.ts&appDir=C%3A%5CUsers%5CHP%5CDocuments%5CInfTech-quiz-management-system%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CHP%5CDocuments%5CInfTech-quiz-management-system&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/quizzes/route.ts":
/*!**************************************!*\
  !*** ./src/app/api/quizzes/route.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   dynamic: () => (/* binding */ dynamic)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/prisma */ \"(rsc)/./src/lib/prisma.ts\");\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/auth */ \"(rsc)/./src/lib/auth.ts\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/v3/types.js\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/v3/ZodError.js\");\n/* harmony import */ var _lib_realtime_broadcast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/realtime-broadcast */ \"(rsc)/./src/lib/realtime-broadcast.ts\");\n\n\n\n\n\n// Force dynamic rendering\nconst dynamic = \"force-dynamic\";\nconst createQuizSchema = zod__WEBPACK_IMPORTED_MODULE_4__.object({\n    title: zod__WEBPACK_IMPORTED_MODULE_4__.string().min(1),\n    description: zod__WEBPACK_IMPORTED_MODULE_4__.string().optional(),\n    passingScore: zod__WEBPACK_IMPORTED_MODULE_4__.number().min(0).max(100),\n    timeLimit: zod__WEBPACK_IMPORTED_MODULE_4__.number().min(1).optional(),\n    isActive: zod__WEBPACK_IMPORTED_MODULE_4__.boolean().optional(),\n    startAt: zod__WEBPACK_IMPORTED_MODULE_4__.string().datetime().optional(),\n    creatorId: zod__WEBPACK_IMPORTED_MODULE_4__.string(),\n    enableChat: zod__WEBPACK_IMPORTED_MODULE_4__.boolean().optional(),\n    chatRoomName: zod__WEBPACK_IMPORTED_MODULE_4__.string().optional(),\n    allowChatDuringQuiz: zod__WEBPACK_IMPORTED_MODULE_4__.boolean().optional(),\n    enableStudyGroup: zod__WEBPACK_IMPORTED_MODULE_4__.boolean().optional(),\n    questions: zod__WEBPACK_IMPORTED_MODULE_4__.array(zod__WEBPACK_IMPORTED_MODULE_4__.object({\n        text: zod__WEBPACK_IMPORTED_MODULE_4__.string().min(1),\n        type: zod__WEBPACK_IMPORTED_MODULE_4__[\"enum\"]([\n            \"MULTIPLE_CHOICE\",\n            \"TRUE_FALSE\"\n        ]),\n        options: zod__WEBPACK_IMPORTED_MODULE_4__.array(zod__WEBPACK_IMPORTED_MODULE_4__.object({\n            text: zod__WEBPACK_IMPORTED_MODULE_4__.string().min(1),\n            isCorrect: zod__WEBPACK_IMPORTED_MODULE_4__.boolean()\n        })).min(2)\n    }).refine((question)=>{\n        // Ensure exactly one option is marked as correct\n        const correctCount = question.options.filter((option)=>option.isCorrect).length;\n        return correctCount === 1;\n    }, {\n        message: \"Exactly one option must be marked as correct\"\n    })).min(1)\n});\nasync function POST(request) {\n    try {\n        const session = await (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.requireRole)(\"ADMIN\");\n        const body = await request.json();\n        const data = createQuizSchema.parse(body);\n        // Verify the creator is the authenticated user\n        if (data.creatorId !== session.id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 403\n            });\n        }\n        const quiz = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.quiz.create({\n            data: {\n                title: data.title,\n                description: data.description,\n                passingScore: data.passingScore,\n                timeLimit: data.timeLimit,\n                isActive: data.isActive ?? false,\n                enableChat: data.enableChat ?? false,\n                startAt: data.startAt ? new Date(data.startAt) : null,\n                creatorId: data.creatorId,\n                questions: {\n                    create: data.questions.map((question, index)=>({\n                            text: question.text,\n                            type: question.type,\n                            order: index + 1,\n                            options: {\n                                create: question.options.map((option, optionIndex)=>({\n                                        text: option.text,\n                                        isCorrect: option.isCorrect,\n                                        order: optionIndex + 1\n                                    }))\n                            }\n                        }))\n                }\n            },\n            include: {\n                questions: {\n                    include: {\n                        options: true\n                    }\n                }\n            }\n        });\n        // Auto-create chat room if enabled\n        if (data.enableChat) {\n            try {\n                const roomName = data.chatRoomName || `${quiz.title} - Discussion`;\n                const chatRoom = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.chatRoom.create({\n                    data: {\n                        name: roomName,\n                        type: \"QUIZ_DISCUSSION\",\n                        quizId: quiz.id,\n                        createdBy: data.creatorId,\n                        allowChatDuringQuiz: data.allowChatDuringQuiz || false,\n                        isActive: true\n                    }\n                });\n                // Create system message\n                await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.chatMessage.create({\n                    data: {\n                        roomId: chatRoom.id,\n                        userId: data.creatorId,\n                        content: `📚 Discussion room created for quiz: ${quiz.title}. Students can join after completing the quiz.`,\n                        isSystemMessage: true\n                    }\n                });\n                // Create study group if enabled\n                if (data.enableStudyGroup) {\n                    const studyGroup = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.studyGroup.create({\n                        data: {\n                            name: `${quiz.title} - Study Group`,\n                            description: `Collaborative study group for ${quiz.title}`,\n                            quizId: quiz.id,\n                            createdBy: data.creatorId\n                        }\n                    });\n                    // Create study group chat room\n                    const studyGroupRoom = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.chatRoom.create({\n                        data: {\n                            name: `${quiz.title} - Study Group`,\n                            type: \"STUDY_GROUP\",\n                            studyGroupId: studyGroup.id,\n                            createdBy: data.creatorId,\n                            allowChatDuringQuiz: true,\n                            isActive: true\n                        }\n                    });\n                    await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.chatMessage.create({\n                        data: {\n                            roomId: studyGroupRoom.id,\n                            userId: data.creatorId,\n                            content: `👥 Study group created! Collaborate and help each other learn about: ${quiz.title}`,\n                            isSystemMessage: true\n                        }\n                    });\n                }\n                console.log(`Auto-created chat room for quiz: ${quiz.title}`);\n            } catch (error) {\n                console.warn(\"Failed to create chat room for quiz:\", error);\n            // Don't fail quiz creation if chat room creation fails\n            }\n        }\n        // Broadcast quiz creation if active\n        if (quiz.isActive) {\n            try {\n                // Initialize WebSocket if not already done\n                const initResponse = await fetch(`${process.env.NEXTAUTH_URL || \"http://localhost:3001\"}/api/socketio`, {\n                    method: \"POST\"\n                });\n                const io = global.io;\n                if (io) {\n                    const broadcast = (0,_lib_realtime_broadcast__WEBPACK_IMPORTED_MODULE_3__.getBroadcastInstance)(io);\n                    await broadcast.broadcastQuizStatus({\n                        quizId: quiz.id,\n                        type: \"PUBLISHED\",\n                        message: `New quiz \"${quiz.title}\" has been published and is now available!`,\n                        sentBy: data.creatorId\n                    });\n                    // Also broadcast as a general notification to all students\n                    io.emit(\"new-quiz-notification\", {\n                        id: `quiz-${quiz.id}`,\n                        message: `📚 New quiz available: \"${quiz.title}\"`,\n                        quizId: quiz.id,\n                        quizTitle: quiz.title,\n                        createdAt: quiz.createdAt\n                    });\n                    console.log(\"Quiz creation notification sent:\", quiz.title);\n                } else {\n                    console.warn(\"WebSocket IO not available for broadcasting\");\n                }\n            } catch (error) {\n                console.warn(\"Failed to broadcast quiz creation:\", error);\n            }\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(quiz);\n    } catch (error) {\n        console.error(\"Create quiz error:\", error);\n        if (error instanceof zod__WEBPACK_IMPORTED_MODULE_5__.ZodError) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid data\",\n                details: error.errors\n            }, {\n                status: 400\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const role = searchParams.get(\"role\");\n        let quizzes;\n        if (role === \"student\") {\n            // Visible to students if active\n            quizzes = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.quiz.findMany({\n                where: {\n                    isActive: true\n                },\n                include: {\n                    creator: {\n                        select: {\n                            name: true\n                        }\n                    },\n                    chatRooms: {\n                        where: {\n                            isActive: true\n                        },\n                        select: {\n                            id: true,\n                            name: true,\n                            type: true\n                        }\n                    },\n                    _count: {\n                        select: {\n                            questions: true,\n                            attempts: true\n                        }\n                    }\n                },\n                orderBy: {\n                    createdAt: \"desc\"\n                }\n            });\n        } else {\n            // Get quizzes for admin (requires authentication)\n            const session = await (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.requireRole)(\"ADMIN\");\n            quizzes = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.quiz.findMany({\n                where: {\n                    creatorId: session.id\n                },\n                include: {\n                    _count: {\n                        select: {\n                            questions: true,\n                            attempts: true\n                        }\n                    }\n                },\n                orderBy: {\n                    createdAt: \"desc\"\n                }\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(quizzes);\n    } catch (error) {\n        console.error(\"Get quizzes error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/quizzes/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/auth.ts":
/*!*************************!*\
  !*** ./src/lib/auth.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSession: () => (/* binding */ getSession),\n/* harmony export */   requireAuth: () => (/* binding */ requireAuth),\n/* harmony export */   requireRole: () => (/* binding */ requireRole)\n/* harmony export */ });\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n\nasync function getSession() {\n    try {\n        const cookieStore = (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies)();\n        const sessionCookie = cookieStore.get(\"user-session\");\n        if (!sessionCookie || !sessionCookie.value) {\n            return null;\n        }\n        // Validate that the cookie value is not empty or malformed\n        if (sessionCookie.value.trim() === \"\") {\n            return null;\n        }\n        const session = JSON.parse(sessionCookie.value);\n        // Validate that the session has required fields\n        if (!session || !session.id || !session.email || !session.name || !session.role) {\n            console.warn(\"Invalid session structure:\", session);\n            return null;\n        }\n        return session;\n    } catch (error) {\n        console.error(\"Error getting session:\", error);\n        return null;\n    }\n}\nasync function requireAuth() {\n    const session = await getSession();\n    if (!session) {\n        throw new Error(\"Authentication required\");\n    }\n    return session;\n}\nasync function requireRole(role) {\n    const session = await requireAuth();\n    if (session.role !== role) {\n        throw new Error(`Access denied. Required role: ${role}`);\n    }\n    return session;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2F1dGgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFzQztBQVUvQixlQUFlQztJQUNwQixJQUFJO1FBQ0YsTUFBTUMsY0FBY0YscURBQU9BO1FBQzNCLE1BQU1HLGdCQUFnQkQsWUFBWUUsR0FBRyxDQUFDO1FBRXRDLElBQUksQ0FBQ0QsaUJBQWlCLENBQUNBLGNBQWNFLEtBQUssRUFBRTtZQUMxQyxPQUFPO1FBQ1Q7UUFFQSwyREFBMkQ7UUFDM0QsSUFBSUYsY0FBY0UsS0FBSyxDQUFDQyxJQUFJLE9BQU8sSUFBSTtZQUNyQyxPQUFPO1FBQ1Q7UUFFQSxNQUFNQyxVQUFVQyxLQUFLQyxLQUFLLENBQUNOLGNBQWNFLEtBQUs7UUFFOUMsZ0RBQWdEO1FBQ2hELElBQUksQ0FBQ0UsV0FBVyxDQUFDQSxRQUFRRyxFQUFFLElBQUksQ0FBQ0gsUUFBUUksS0FBSyxJQUFJLENBQUNKLFFBQVFLLElBQUksSUFBSSxDQUFDTCxRQUFRTSxJQUFJLEVBQUU7WUFDL0VDLFFBQVFDLElBQUksQ0FBQyw4QkFBOEJSO1lBQzNDLE9BQU87UUFDVDtRQUVBLE9BQU9BO0lBQ1QsRUFBRSxPQUFPUyxPQUFPO1FBQ2RGLFFBQVFFLEtBQUssQ0FBQywwQkFBMEJBO1FBQ3hDLE9BQU87SUFDVDtBQUNGO0FBRU8sZUFBZUM7SUFDcEIsTUFBTVYsVUFBVSxNQUFNTjtJQUN0QixJQUFJLENBQUNNLFNBQVM7UUFDWixNQUFNLElBQUlXLE1BQU07SUFDbEI7SUFDQSxPQUFPWDtBQUNUO0FBRU8sZUFBZVksWUFBWU4sSUFBYztJQUM5QyxNQUFNTixVQUFVLE1BQU1VO0lBQ3RCLElBQUlWLFFBQVFNLElBQUksS0FBS0EsTUFBTTtRQUN6QixNQUFNLElBQUlLLE1BQU0sQ0FBQyw4QkFBOEIsRUFBRUwsS0FBSyxDQUFDO0lBQ3pEO0lBQ0EsT0FBT047QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL3F1aXotbWFuYWdlbWVudC1zeXN0ZW0vLi9zcmMvbGliL2F1dGgudHM/NjY5MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb29raWVzIH0gZnJvbSAnbmV4dC9oZWFkZXJzJ1xuaW1wb3J0IHsgVXNlclJvbGUgfSBmcm9tICdAL3R5cGVzJ1xuXG5leHBvcnQgaW50ZXJmYWNlIFNlc3Npb25Vc2VyIHtcbiAgaWQ6IHN0cmluZ1xuICBlbWFpbDogc3RyaW5nXG4gIG5hbWU6IHN0cmluZ1xuICByb2xlOiBVc2VyUm9sZVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2Vzc2lvbigpOiBQcm9taXNlPFNlc3Npb25Vc2VyIHwgbnVsbD4ge1xuICB0cnkge1xuICAgIGNvbnN0IGNvb2tpZVN0b3JlID0gY29va2llcygpXG4gICAgY29uc3Qgc2Vzc2lvbkNvb2tpZSA9IGNvb2tpZVN0b3JlLmdldCgndXNlci1zZXNzaW9uJylcbiAgICBcbiAgICBpZiAoIXNlc3Npb25Db29raWUgfHwgIXNlc3Npb25Db29raWUudmFsdWUpIHtcbiAgICAgIHJldHVybiBudWxsXG4gICAgfVxuXG4gICAgLy8gVmFsaWRhdGUgdGhhdCB0aGUgY29va2llIHZhbHVlIGlzIG5vdCBlbXB0eSBvciBtYWxmb3JtZWRcbiAgICBpZiAoc2Vzc2lvbkNvb2tpZS52YWx1ZS50cmltKCkgPT09ICcnKSB7XG4gICAgICByZXR1cm4gbnVsbFxuICAgIH1cblxuICAgIGNvbnN0IHNlc3Npb24gPSBKU09OLnBhcnNlKHNlc3Npb25Db29raWUudmFsdWUpXG4gICAgXG4gICAgLy8gVmFsaWRhdGUgdGhhdCB0aGUgc2Vzc2lvbiBoYXMgcmVxdWlyZWQgZmllbGRzXG4gICAgaWYgKCFzZXNzaW9uIHx8ICFzZXNzaW9uLmlkIHx8ICFzZXNzaW9uLmVtYWlsIHx8ICFzZXNzaW9uLm5hbWUgfHwgIXNlc3Npb24ucm9sZSkge1xuICAgICAgY29uc29sZS53YXJuKCdJbnZhbGlkIHNlc3Npb24gc3RydWN0dXJlOicsIHNlc3Npb24pXG4gICAgICByZXR1cm4gbnVsbFxuICAgIH1cblxuICAgIHJldHVybiBzZXNzaW9uXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZ2V0dGluZyBzZXNzaW9uOicsIGVycm9yKVxuICAgIHJldHVybiBudWxsXG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJlcXVpcmVBdXRoKCk6IFByb21pc2U8U2Vzc2lvblVzZXI+IHtcbiAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IGdldFNlc3Npb24oKVxuICBpZiAoIXNlc3Npb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0F1dGhlbnRpY2F0aW9uIHJlcXVpcmVkJylcbiAgfVxuICByZXR1cm4gc2Vzc2lvblxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcmVxdWlyZVJvbGUocm9sZTogVXNlclJvbGUpOiBQcm9taXNlPFNlc3Npb25Vc2VyPiB7XG4gIGNvbnN0IHNlc3Npb24gPSBhd2FpdCByZXF1aXJlQXV0aCgpXG4gIGlmIChzZXNzaW9uLnJvbGUgIT09IHJvbGUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYEFjY2VzcyBkZW5pZWQuIFJlcXVpcmVkIHJvbGU6ICR7cm9sZX1gKVxuICB9XG4gIHJldHVybiBzZXNzaW9uXG59XG4iXSwibmFtZXMiOlsiY29va2llcyIsImdldFNlc3Npb24iLCJjb29raWVTdG9yZSIsInNlc3Npb25Db29raWUiLCJnZXQiLCJ2YWx1ZSIsInRyaW0iLCJzZXNzaW9uIiwiSlNPTiIsInBhcnNlIiwiaWQiLCJlbWFpbCIsIm5hbWUiLCJyb2xlIiwiY29uc29sZSIsIndhcm4iLCJlcnJvciIsInJlcXVpcmVBdXRoIiwiRXJyb3IiLCJyZXF1aXJlUm9sZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/auth.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/prisma.ts":
/*!***************************!*\
  !*** ./src/lib/prisma.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst globalForPrisma = globalThis;\nconst prisma = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nif (true) globalForPrisma.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3ByaXNtYS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNkM7QUFFN0MsTUFBTUMsa0JBQWtCQztBQUlqQixNQUFNQyxTQUFTRixnQkFBZ0JFLE1BQU0sSUFBSSxJQUFJSCx3REFBWUEsR0FBRTtBQUVsRSxJQUFJSSxJQUF5QixFQUFjSCxnQkFBZ0JFLE1BQU0sR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWl6LW1hbmFnZW1lbnQtc3lzdGVtLy4vc3JjL2xpYi9wcmlzbWEudHM/MDFkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcmlzbWFDbGllbnQgfSBmcm9tICdAcHJpc21hL2NsaWVudCdcblxuY29uc3QgZ2xvYmFsRm9yUHJpc21hID0gZ2xvYmFsVGhpcyBhcyB1bmtub3duIGFzIHtcbiAgcHJpc21hOiBQcmlzbWFDbGllbnQgfCB1bmRlZmluZWRcbn1cblxuZXhwb3J0IGNvbnN0IHByaXNtYSA9IGdsb2JhbEZvclByaXNtYS5wcmlzbWEgPz8gbmV3IFByaXNtYUNsaWVudCgpXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSBnbG9iYWxGb3JQcmlzbWEucHJpc21hID0gcHJpc21hXG4iXSwibmFtZXMiOlsiUHJpc21hQ2xpZW50IiwiZ2xvYmFsRm9yUHJpc21hIiwiZ2xvYmFsVGhpcyIsInByaXNtYSIsInByb2Nlc3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/prisma.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/realtime-broadcast.ts":
/*!***************************************!*\
  !*** ./src/lib/realtime-broadcast.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RealtimeBroadcast: () => (/* binding */ RealtimeBroadcast),\n/* harmony export */   getBroadcastInstance: () => (/* binding */ getBroadcastInstance)\n/* harmony export */ });\n/* harmony import */ var _prisma__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./prisma */ \"(rsc)/./src/lib/prisma.ts\");\n\nclass RealtimeBroadcast {\n    constructor(io){\n        this.io = io;\n    }\n    // Quiz Status Broadcasting\n    async broadcastQuizStatus(data) {\n        try {\n            // Save broadcast to database\n            const broadcast = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.quizBroadcast.create({\n                data: {\n                    quizId: data.quizId,\n                    type: data.type,\n                    message: data.message,\n                    sentBy: data.sentBy\n                },\n                include: {\n                    quiz: {\n                        select: {\n                            title: true,\n                            chatRooms: {\n                                select: {\n                                    id: true\n                                }\n                            },\n                            studyGroups: {\n                                select: {\n                                    id: true,\n                                    chatRooms: {\n                                        select: {\n                                            id: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    sender: {\n                        select: {\n                            name: true,\n                            role: true\n                        }\n                    }\n                }\n            });\n            // Broadcast to all quiz-related chat rooms\n            const roomIds = [\n                ...broadcast.quiz.chatRooms.map((room)=>room.id),\n                ...broadcast.quiz.studyGroups.flatMap((group)=>group.chatRooms.map((room)=>room.id))\n            ];\n            for (const roomId of roomIds){\n                this.io.to(roomId).emit(\"quiz-status-update\", {\n                    id: broadcast.id,\n                    quizId: data.quizId,\n                    quizTitle: broadcast.quiz.title,\n                    type: data.type,\n                    message: data.message,\n                    sender: broadcast.sender,\n                    timestamp: broadcast.timestamp\n                });\n            }\n            // Also broadcast to general announcement channel\n            this.io.emit(\"quiz-announcement\", {\n                id: broadcast.id,\n                quizId: data.quizId,\n                quizTitle: broadcast.quiz.title,\n                type: data.type,\n                message: data.message,\n                sender: broadcast.sender,\n                timestamp: broadcast.timestamp\n            });\n            return broadcast;\n        } catch (error) {\n            console.error(\"Error broadcasting quiz status:\", error);\n            throw error;\n        }\n    }\n    // Study Group Progress Updates\n    async broadcastStudyProgress(data) {\n        try {\n            // Get study group details\n            const studyGroup = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.studyGroup.findUnique({\n                where: {\n                    id: data.studyGroupId\n                },\n                include: {\n                    chatRooms: {\n                        select: {\n                            id: true\n                        }\n                    },\n                    members: {\n                        include: {\n                            user: {\n                                select: {\n                                    id: true,\n                                    name: true\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n            if (!studyGroup) {\n                throw new Error(\"Study group not found\");\n            }\n            const user = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.user.findUnique({\n                where: {\n                    id: data.userId\n                },\n                select: {\n                    name: true,\n                    role: true\n                }\n            });\n            // Broadcast to study group chat rooms\n            for (const room of studyGroup.chatRooms){\n                this.io.to(room.id).emit(\"study-progress-update\", {\n                    studyGroupId: data.studyGroupId,\n                    studyGroupName: studyGroup.name,\n                    userId: data.userId,\n                    userName: user?.name,\n                    progressType: data.progressType,\n                    message: data.message,\n                    data: data.data,\n                    timestamp: new Date().toISOString()\n                });\n            }\n            // Send system message to chat rooms\n            for (const room of studyGroup.chatRooms){\n                await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.chatMessage.create({\n                    data: {\n                        roomId: room.id,\n                        userId: data.userId,\n                        content: data.message,\n                        isSystemMessage: true\n                    }\n                });\n                this.io.to(room.id).emit(\"new-message\", {\n                    id: Date.now().toString(),\n                    content: data.message,\n                    user: {\n                        id: data.userId,\n                        name: user?.name || \"System\",\n                        role: user?.role || \"SYSTEM\"\n                    },\n                    createdAt: new Date().toISOString(),\n                    isSystemMessage: true\n                });\n            }\n        } catch (error) {\n            console.error(\"Error broadcasting study progress:\", error);\n            throw error;\n        }\n    }\n    // Instructor Presence Broadcasting\n    async broadcastInstructorPresence(userId, isOnline, roomId) {\n        try {\n            const user = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.user.findUnique({\n                where: {\n                    id: userId\n                },\n                select: {\n                    name: true,\n                    role: true\n                }\n            });\n            if (!user || user.role !== \"TEACHER\" && user.role !== \"ADMIN\") {\n                return;\n            }\n            const presenceData = {\n                userId,\n                userName: user.name,\n                userRole: user.role,\n                isOnline,\n                timestamp: new Date().toISOString()\n            };\n            if (roomId) {\n                // Broadcast to specific room\n                this.io.to(roomId).emit(\"instructor-presence-update\", {\n                    ...presenceData,\n                    roomId\n                });\n            } else {\n                // Broadcast globally\n                this.io.emit(\"instructor-presence-update\", presenceData);\n            }\n        } catch (error) {\n            console.error(\"Error broadcasting instructor presence:\", error);\n        }\n    }\n    // Live Study Session Updates\n    async broadcastStudySessionUpdate(sessionId, updateData) {\n        try {\n            const session = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.studySession.findUnique({\n                where: {\n                    id: sessionId\n                },\n                include: {\n                    creator: {\n                        select: {\n                            name: true\n                        }\n                    },\n                    studyGroup: {\n                        select: {\n                            name: true\n                        }\n                    },\n                    quiz: {\n                        select: {\n                            title: true\n                        }\n                    }\n                }\n            });\n            if (!session) {\n                throw new Error(\"Study session not found\");\n            }\n            const broadcastData = {\n                sessionId,\n                sessionName: session.name,\n                studyGroupName: session.studyGroup?.name,\n                quizTitle: session.quiz?.title,\n                type: updateData.type,\n                message: updateData.message,\n                data: updateData.data,\n                timestamp: new Date().toISOString()\n            };\n            // Broadcast to study session participants\n            this.io.to(`study-session-${sessionId}`).emit(\"study-session-update\", broadcastData);\n            // Also broadcast to related study group chat rooms if exists\n            if (session.studyGroupId) {\n                const studyGroup = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.studyGroup.findUnique({\n                    where: {\n                        id: session.studyGroupId\n                    },\n                    include: {\n                        chatRooms: {\n                            select: {\n                                id: true\n                            }\n                        }\n                    }\n                });\n                if (studyGroup) {\n                    for (const room of studyGroup.chatRooms){\n                        this.io.to(room.id).emit(\"study-session-update\", broadcastData);\n                    }\n                }\n            }\n        } catch (error) {\n            console.error(\"Error broadcasting study session update:\", error);\n        }\n    }\n}\n// Singleton instance\nlet broadcastInstance = null;\nconst getBroadcastInstance = (io)=>{\n    if (!broadcastInstance && io) {\n        broadcastInstance = new RealtimeBroadcast(io);\n    }\n    if (!broadcastInstance) {\n        throw new Error(\"Broadcast instance not initialized\");\n    }\n    return broadcastInstance;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/realtime-broadcast.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/zod"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fquizzes%2Froute&page=%2Fapi%2Fquizzes%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fquizzes%2Froute.ts&appDir=C%3A%5CUsers%5CHP%5CDocuments%5CInfTech-quiz-management-system%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CHP%5CDocuments%5CInfTech-quiz-management-system&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();